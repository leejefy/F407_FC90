<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FC90v1.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FC90v1.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Thu Apr 28 10:48:19 2016
<BR><P>
<H3>Maximum Stack Usage =        560 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; qdStart &rArr; qdLoadDriver &rArr; qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[459]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[23]">CAN1_RX0_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[24]">CAN1_RX1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[25]">CAN1_SCE_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[22]">CAN1_TX_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4f]">CAN2_RX0_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[50]">CAN2_RX1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[51]">CAN2_SCE_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4e]">CAN2_TX_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5e]">CRYP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5d]">DCMI_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1d]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3e]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[48]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[49]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[53]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4c]">ETH_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[4d]">ETH_WKUP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[37]">EXTI15_10_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[26]">EXTI9_5_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[13]">FLASH_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[60]">FPU_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3f]">FSMC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5f]">HASH_RNG_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2f]">I2C1_ER_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2e]">I2C1_EV_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[31]">I2C2_ER_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[30]">I2C2_EV_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[58]">I2C3_ER_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[57]">I2C3_EV_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[52]">OTG_FS_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[39]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5a]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[59]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5b]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[10]">PVD_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[38]">RTC_Alarm_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[12]">RTC_WKUP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[40]">SDIO_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[32]">SPI1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[33]">SPI2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[42]">SPI3_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[61]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f40xx.o(.text)
 <LI><a href="#[11]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[27]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2a]">TIM1_CC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[29]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[28]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2b]">TIM2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2c]">TIM3_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[2d]">TIM4_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[41]">TIM5_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[45]">TIM6_DAC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[46]">TIM7_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3a]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3d]">TIM8_CC_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3c]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[3b]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[43]">UART4_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[44]">UART5_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[34]">USART1_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[35]">USART2_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[36]">USART3_IRQHandler</a> from usart.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[56]">USART6_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[f]">WWDG_IRQHandler</a> from startup_stm32f40xx.o(.text) referenced from startup_stm32f40xx.o(RESET)
 <LI><a href="#[6b]">__backspace</a> from backspace.o(.text) referenced from scanf_char_file.o(.text)
 <LI><a href="#[70]">__main</a> from __main.o(!!!main) referenced from startup_stm32f40xx.o(.text)
 <LI><a href="#[6f]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[6c]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[6d]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[6a]">fgetc</a> from usart.o(.text) referenced from scanf_char_file.o(.text)
 <LI><a href="#[69]">fputc</a> from usart.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[65]">gtBspReadMii</a> from ev96122mii.o(.text) referenced from msapiinit.o(.text)
 <LI><a href="#[66]">gtBspWriteMii</a> from ev96122mii.o(.text) referenced from msapiinit.o(.text)
 <LI><a href="#[6e]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[63]">madSMIRead</a> from gtsysconfig.o(.text) referenced from gtsysconfig.o(.text)
 <LI><a href="#[64]">madSMIWrite</a> from gtsysconfig.o(.text) referenced from gtsysconfig.o(.text)
 <LI><a href="#[3]">my_mem_init</a> from malloc.o(.text) referenced 2 times from malloc.o(.data)
 <LI><a href="#[4]">my_mem_perused</a> from malloc.o(.text) referenced 2 times from malloc.o(.data)
 <LI><a href="#[67]">qdSimRead</a> from qdsim.o(.text) referenced from msapiinit.o(.text)
 <LI><a href="#[68]">qdSimWrite</a> from qdsim.o(.text) referenced from msapiinit.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[70]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[71]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[73]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[45e]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[45f]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[460]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[461]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[462]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[74]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[450]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[463]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[76]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[78]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[79]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[7b]"></a>_printf_llx</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[7d]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7f]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[464]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[89]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[81]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[465]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[83]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[466]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[467]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[468]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[469]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[85]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[46a]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[46b]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[46c]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[46d]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[46e]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[46f]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[470]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[471]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[472]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[473]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[474]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[475]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[476]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[477]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[478]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[479]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[47a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[47b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[47c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[47d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[47e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[72]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[47f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[86]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[88]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[480]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[8a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; qdStart &rArr; qdLoadDriver &rArr; qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[481]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[45c]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[482]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[8f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[459]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f40xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[bf]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_NVIC_Config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_NVIC_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[483]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[484]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[91]"></a>GPIO_DeInit</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[cb]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[485]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[486]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[487]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[488]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[489]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48a]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48d]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48e]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[48f]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[490]"></a>RCC_DeInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[491]"></a>RCC_HSEConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[93]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[492]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[493]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[494]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[495]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[496]"></a>RCC_PLLConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[497]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[498]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[499]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49a]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49b]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49c]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49d]"></a>RCC_MCO1Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49e]"></a>RCC_MCO2Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[49f]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a0]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a1]"></a>RCC_HCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a2]"></a>RCC_PCLK1Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a3]"></a>RCC_PCLK2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
</UL>

<P><STRONG><a name="[4a4]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a5]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a6]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a7]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a8]"></a>RCC_SAIPLLI2SClkDivConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4a9]"></a>RCC_SAIPLLSAIClkDivConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4aa]"></a>RCC_SAIBlockACLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4ab]"></a>RCC_SAIBlockBCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4ac]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4ad]"></a>RCC_TIMCLKPresConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[4ae]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4af]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[e1]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
</UL>

<P><STRONG><a name="[92]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
</UL>

<P><STRONG><a name="[4b0]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b1]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[96]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_DeInit
</UL>

<P><STRONG><a name="[4b2]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b3]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b4]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b5]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b6]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b7]"></a>RCC_LSEModeConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b8]"></a>RCC_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4b9]"></a>RCC_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4ba]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[4bb]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>SYSCFG_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_syscfg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[4bc]"></a>SYSCFG_MemoryRemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[4bd]"></a>SYSCFG_MemorySwappingBank</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[4be]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f4xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>SYSCFG_ETH_MediaInterfaceConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
</UL>

<P><STRONG><a name="[4bf]"></a>SYSCFG_CompensationCellCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[4c0]"></a>SYSCFG_GetCompensationCellStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>USART_DeInit</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>

<P><STRONG><a name="[99]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[4c1]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c2]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c3]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[4c4]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c5]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c6]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c7]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[4c8]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4c9]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4ca]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4cb]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4cc]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4cd]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4ce]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4cf]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4d0]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4d1]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4d2]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4d3]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[4d4]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[c6]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[cd]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[d2]"></a>USART_GetITStatus</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[4d5]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>ETH_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[dd]"></a>ETH_StructInit</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[9c]"></a>ETH_WritePHYRegister</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ETH_WritePHYRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_PHYLoopBackCmd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[a0]"></a>ETH_ReadPHYRegister</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_ReadPHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_PHYLoopBackCmd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ETH_PHY
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ETH_PHY
</UL>

<P><STRONG><a name="[9e]"></a>ETH_Init</STRONG> (Thumb, 1242 bytes, Stack size 56 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = ETH_Init &rArr; ETH_WritePHYRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[a6]"></a>ETH_DMAReceptionCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[a5]"></a>ETH_DMATransmissionCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[a1]"></a>ETH_FlushTransmitFIFO</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[a2]"></a>ETH_MACReceptionCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[a3]"></a>ETH_MACTransmissionCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Stop
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
</UL>

<P><STRONG><a name="[a4]"></a>ETH_Start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionCmd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATransmissionCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAReceptionCmd
</UL>

<P><STRONG><a name="[a7]"></a>ETH_Stop</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionCmd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATransmissionCmd
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAReceptionCmd
</UL>

<P><STRONG><a name="[4d6]"></a>ETH_GetFlowControlBusyStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>ETH_InitiatePauseControlFrame</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[a9]"></a>ETH_BackPressureActivationCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[4d7]"></a>ETH_GetMACFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4d8]"></a>ETH_GetMACITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4d9]"></a>ETH_MACITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4da]"></a>ETH_MACAddressConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4db]"></a>ETH_GetMACAddress</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>ETH_MACAddressPerfectFilterCmd</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[ab]"></a>ETH_MACAddressFilterConfig</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[ac]"></a>ETH_MACAddressMaskBytesFilterConfig</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[4dc]"></a>ETH_Get_Received_Frame</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4dd]"></a>ETH_Get_Received_Frame_interrupt</STRONG> (Thumb, 358 bytes, Stack size 20 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4de]"></a>ETH_Prepare_Transmit_Descriptors</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4df]"></a>ETH_DMARxDescChainInit</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e0]"></a>ETH_CheckFrameReceived</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e1]"></a>ETH_DMATxDescChainInit</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e2]"></a>ETH_GetDMATxDescFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e3]"></a>ETH_GetDMATxDescCollisionCount</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e4]"></a>ETH_SetDMATxDescOwnBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e5]"></a>ETH_DMATxDescTransmitITConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e6]"></a>ETH_DMATxDescFrameSegmentConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e7]"></a>ETH_DMATxDescChecksumInsertionConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e8]"></a>ETH_DMATxDescCRCCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4e9]"></a>ETH_DMATxDescSecondAddressChainedCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4ea]"></a>ETH_DMATxDescShortFramePaddingCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4eb]"></a>ETH_DMATxDescBufferSizeConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4ec]"></a>ETH_GetDMARxDescFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4ed]"></a>ETH_GetDMAPTPRxDescExtendedFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4ee]"></a>ETH_SetDMARxDescOwnBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>ETH_GetDMARxDescFrameLength</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetRxPktSize
</UL>

<P><STRONG><a name="[4ef]"></a>ETH_DMARxDescReceiveITConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f0]"></a>ETH_GetDMARxDescBufferSize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>ETH_GetRxPktSize</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetDMARxDescFrameLength
</UL>

<P><STRONG><a name="[af]"></a>ETH_EnhancedDescriptorCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[dc]"></a>ETH_SoftwareReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[b0]"></a>ETH_GetSoftwareResetStatus</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = ETH_GetSoftwareResetStatus &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[4f1]"></a>ETH_GetDMAFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f2]"></a>ETH_DMAClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>ETH_DMAITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
</UL>

<P><STRONG><a name="[4f3]"></a>ETH_GetDMAITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f4]"></a>ETH_DMAClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f5]"></a>ETH_GetTransmitProcessState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f6]"></a>ETH_GetReceiveProcessState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f7]"></a>ETH_GetFlushTransmitFIFOStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f8]"></a>ETH_GetDMAOverflowStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4f9]"></a>ETH_GetRxOverflowMissedFrameCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4fa]"></a>ETH_GetBufferUnavailableMissedFrameCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4fb]"></a>ETH_GetCurrentTxDescStartAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4fc]"></a>ETH_GetCurrentRxDescStartAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4fd]"></a>ETH_GetCurrentTxBufferAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4fe]"></a>ETH_GetCurrentRxBufferAddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[4ff]"></a>ETH_ResumeDMATransmission</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[500]"></a>ETH_ResumeDMAReception</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[501]"></a>ETH_SetReceiveWatchdogTimer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>ETH_PHYLoopBackCmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
</UL>

<P><STRONG><a name="[b2]"></a>ETH_ResetWakeUpFrameFilterRegisterPointer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[b3]"></a>ETH_SetWakeUpFrameFilterRegister</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[b4]"></a>ETH_GlobalUnicastWakeUpCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[502]"></a>ETH_GetPMTFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>ETH_WakeUpFrameDetectionCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[b6]"></a>ETH_MagicPacketDetectionCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[b7]"></a>ETH_PowerDownCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>

<P><STRONG><a name="[503]"></a>ETH_MMCCounterFullPreset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[504]"></a>ETH_MMCCounterHalfPreset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[505]"></a>ETH_MMCCounterFreezeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[506]"></a>ETH_MMCResetOnReadCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[507]"></a>ETH_MMCCounterRolloverCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[508]"></a>ETH_MMCCountersReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[509]"></a>ETH_MMCITConfig</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[50a]"></a>ETH_GetMMCITStatus</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[50b]"></a>ETH_GetMMCRegister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text), UNUSED)

<P><STRONG><a name="[50c]"></a>GPIO_group_OUT</STRONG> (Thumb, 454 bytes, Stack size 0 bytes, common.o(.text), UNUSED)

<P><STRONG><a name="[50d]"></a>GPIO_bits_OUT</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, common.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>delay_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50e]"></a>delay_us</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, common.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>delay_xms</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[ba]"></a>delay_ms</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_xms
</UL>

<P><STRONG><a name="[c4]"></a>Time_Update</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[bc]"></a>Show_ETH_PHY</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_ETH_PHY
</UL>

<P><STRONG><a name="[bd]"></a>Read_ETH_PHY</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[be]"></a>Check_ETH_PHY</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ETH_PHY
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[8b]"></a>main</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = main &rArr; qdStart &rArr; qdLoadDriver &rArr; qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(.text)
</UL>
<P><STRONG><a name="[50f]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>_sys_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[69]"></a>fputc</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>fgetc</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>uart_init</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = uart_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>uart3SendChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3SendChars
</UL>

<P><STRONG><a name="[d0]"></a>uart3SendChars</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart3SendChar
</UL>

<P><STRONG><a name="[36]"></a>USART3_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40xx.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>mymemcpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myrealloc
</UL>

<P><STRONG><a name="[d4]"></a>mymemset</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, malloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mymemset
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_init
</UL>

<P><STRONG><a name="[3]"></a>my_mem_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, malloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = my_mem_init &rArr; mymemset
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymemset
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> malloc.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>my_mem_perused</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, malloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_mem_perused
</UL>
<BR>[Address Reference Count : 1]<UL><LI> malloc.o(.data)
</UL>
<P><STRONG><a name="[d8]"></a>my_mem_malloc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myrealloc
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymalloc
</UL>

<P><STRONG><a name="[d6]"></a>my_mem_free</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
</UL>

<P><STRONG><a name="[d5]"></a>myfree</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myrealloc
</UL>

<P><STRONG><a name="[d7]"></a>mymalloc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_malloc
</UL>

<P><STRONG><a name="[d9]"></a>myrealloc</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, malloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myfree
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_mem_malloc
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mymemcpy
</UL>

<P><STRONG><a name="[c1]"></a>ETH_BSP_Config</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, stm32f4x7_eth_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ETH_BSP_Config &rArr; ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_WritePHYRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GPIO_Config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_NVIC_Config
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>gfdbSetPortAtuLearnLimit</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[e7]"></a>gfdbGetPortAtuLearnLimit</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[e9]"></a>gfdbGetPortAtuLearnCnt</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[f6]"></a>gfdbGetAtuAllCount</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[f7]"></a>gfdbGetAtuAllCountInDBNum</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[f8]"></a>gfdbGetAtuDynamicCountInDBNum</STRONG> (Thumb, 394 bytes, Stack size 64 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateDevToApp
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[fa]"></a>gfdbSetAtuSize</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[fb]"></a>gfdbGetAgingTimeRange</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[fc]"></a>gfdbGetAgingTimeout</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[fd]"></a>gfdbSetAgingTimeout</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[fe]"></a>gfdbGetLearn2All</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[ff]"></a>gfdbSetLearn2All</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[100]"></a>gfdbGetMacAvb</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[101]"></a>gfdbSetMacAvb</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[102]"></a>gfdbGetAtuDynamicCount</STRONG> (Thumb, 642 bytes, Stack size 64 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateDevToApp
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[103]"></a>gfdbGetAtuEntryFirst</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateDevToApp
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[106]"></a>gfdbGetAtuEntryNext</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateDevToApp
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[107]"></a>gfdbFindAtuMacEntry</STRONG> (Thumb, 566 bytes, Stack size 48 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCmp
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateDevToApp
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
</UL>

<P><STRONG><a name="[109]"></a>gfdbFlush</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[10a]"></a>gfdbFlushInDB</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[10b]"></a>gfdbMove</STRONG> (Thumb, 166 bytes, Stack size 64 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbRemovePort
</UL>

<P><STRONG><a name="[10c]"></a>gfdbMoveInDB</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbRemovePortInDB
</UL>

<P><STRONG><a name="[10d]"></a>gfdbRemovePort</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMove
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[10e]"></a>gfdbRemovePortInDB</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMoveInDB
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[10f]"></a>gfdbAddMacEntry</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuStateAppToDev
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetMode
</UL>

<P><STRONG><a name="[112]"></a>gfdbDelMacEntry</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[113]"></a>gfdbDelAtuEntry</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetMode
</UL>

<P><STRONG><a name="[114]"></a>gfdbLearnEnable</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLearnDisable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[116]"></a>gfdbGetLearnEnable</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[117]"></a>gfdbGetLearnAVB</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[118]"></a>gfdbSetLearnAVB</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[119]"></a>gfdbSetATUTestMode</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[11a]"></a>gfdbGetATUTestMode</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[11b]"></a>gfdbSetMacFPri</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[11c]"></a>gfdbGetMacFPri</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[11d]"></a>gatuGetViolation</STRONG> (Thumb, 544 bytes, Stack size 72 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdShort2Char
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemCpy
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAgeInt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[126]"></a>gstpSetMode</STRONG> (Thumb, 482 bytes, Stack size 48 bytes, gtbrgstp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelAtuEntry
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[127]"></a>gstpSetPortState</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, gtbrgstp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = gstpSetPortState &rArr; hwSetPortRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[128]"></a>gstpGetPortState</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, gtbrgstp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[129]"></a>gsysSetUseIpMappingTable</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[12a]"></a>gsysGetUseIpMappingTable</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[12b]"></a>gsysSetIpMappingPrio</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[12c]"></a>gsysGetIpMappingPrio</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[12f]"></a>gsysReadEeprom</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[130]"></a>gsysWriteEeprom</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[131]"></a>gsysRestartEeprom</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[132]"></a>gsysHaltEeprom</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[133]"></a>gsysGetStEeprom</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[134]"></a>gsysSetScratchMiscCtrl</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatTest
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatCtrl_2
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatCtrl
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerMonitorThreshold
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerMonitorCtrl
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEEETimeRate
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTxIdleTime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWakeTimeFE
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAsrtTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWakeTimeGE
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerCtrl
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearxEEETrStatusCounter
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearxEEERxStatusCounter
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioxPortStallVect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEEPROM
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetP5_Clock
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetP6_Clock
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSyncETai
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioData
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioSMI
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioDirection
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioPinControl
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchBits
</UL>

<P><STRONG><a name="[135]"></a>gsysGetScratchMiscCtrl</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatTest
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatCtrl_2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatCtrl
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerMonitorThreshold
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerMonitorCtrl
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEEETimeRate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTxIdleTime
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeTimeFE
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAsrtTime
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeTimeGE
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerCtrl
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEERxStates
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEETrStatusCounter
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEERxStatusCounter
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioxPortStallVect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEEPROM
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetP5_Clock
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetP6_Clock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSyncETai
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetConfigData
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioData
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioSMI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioSMI
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioDirection
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioPinControl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioPinControl
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioConfigMod
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchBits
</UL>

<P><STRONG><a name="[136]"></a>gsysSetScratchBits</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[137]"></a>gsysGetScratchBits</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[138]"></a>gsysSetGpioConfigMod</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[139]"></a>gsysGetGpioConfigMod</STRONG> (Thumb, 536 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13a]"></a>gsysSetGpioPinControl</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13b]"></a>gsysGetGpioPinControl</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13c]"></a>gsysSetGpioDirection</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13d]"></a>gsysGetGpioDirection</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13e]"></a>gsysSetGpioSMI</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[13f]"></a>gsysGetGpioSMI</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[140]"></a>gsysSetGpioData</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[141]"></a>gsysGetGpioData</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[142]"></a>gsysGetConfigData</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[143]"></a>gsysSetSyncETai</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[144]"></a>gsysGetSyncETai</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[145]"></a>gsysSetP6_Clock</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[146]"></a>gsysGetP6_Clock</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[147]"></a>gsysSetP5_Clock</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[148]"></a>gsysGetP5_Clock</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[149]"></a>gsysSetEEPROM</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14a]"></a>gsysGetEEPROM</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14b]"></a>gsysSetGpioxPortStallVect</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14c]"></a>gsysGetGpioxPortStallVect</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14d]"></a>gsysClearxEEERxStatusCounter</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14e]"></a>gsysGetxEEERxStatusCounter</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[14f]"></a>gsysGetxEEETrStatusCounter</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[150]"></a>gsysClearxEEETrStatusCounter</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[151]"></a>gsysGetxEEERxStates</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[152]"></a>gsysSetPowerCtrl</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[153]"></a>gsysGetPowerCtrl</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[154]"></a>gsysSetWakeTimeGE</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[155]"></a>gsysGetWakeTimeGE</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[156]"></a>gsysSetAsrtTime</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[157]"></a>gsysGetAsrtTime</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[158]"></a>gsysSetWakeTimeFE</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[159]"></a>gsysGetWakeTimeFE</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15a]"></a>gsysSetTxIdleTime</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15b]"></a>gsysGetTxIdleTime</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15c]"></a>gsysSetEEETimeRate</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15d]"></a>gsysGetEEETimeRate</STRONG> (Thumb, 454 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15e]"></a>gsysSetPowerMonitorCtrl</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[15f]"></a>gsysGetPowerMonitorCtrl</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[160]"></a>gsysSetPowerMonitorThreshold</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[161]"></a>gsysGetPowerMonitorThreshold</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[162]"></a>gsysSetVoltageRegulatCtrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[163]"></a>gsysGetVoltageRegulatCtrl</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[164]"></a>gsysSetVoltageRegulatCtrl_2</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[165]"></a>gsysGetVoltageRegulatCtrl_2</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[166]"></a>gsysSetVoltageRegulatTest</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[167]"></a>gsysGetVoltageRegulatTest</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[168]"></a>gsysGlobal2PointDataSet</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetQosWeightCtrl
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetImpCommCtrl
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetEnergeManagementCtrl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetScratchMiscCtrl
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetWatchDogCtrl
</UL>

<P><STRONG><a name="[169]"></a>gsysGlobal2PointDataGet</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetQosWeightCtrl
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetImpCommCtrl
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetEnergeManagementCtrl
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetScratchMiscCtrl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetWatchDogCtrl
</UL>

<P><STRONG><a name="[16a]"></a>gdevSetScratchMiscCtrl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[16b]"></a>gdevGetScratchMiscCtrl</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[16c]"></a>gdevSetEnergeManagementCtrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[16d]"></a>gdevGetEnergeManagementCtrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[16e]"></a>gdevSetImpCommCtrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[16f]"></a>gdevGetImpCommCtrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[170]"></a>gdevSetWatchDogCtrl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[171]"></a>gdevGetWatchDogCtrl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[172]"></a>gdevSetQosWeightCtrl</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[173]"></a>gdevGetQosWeightCtrl</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[174]"></a>gsysGlobal1PointDataSet</STRONG> (Thumb, 486 bytes, Stack size 40 bytes, gtmisc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = gsysGlobal1PointDataSet &rArr; hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
</UL>

<P><STRONG><a name="[175]"></a>gsysGlobal1PointDataGet</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
</UL>

<P><STRONG><a name="[176]"></a>gsysSetMonitorMgmtCtrl</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gtmisc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = gsysSetMonitorMgmtCtrl &rArr; gsysGlobal1PointDataSet &rArr; hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables2X
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMirrorDest
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPDest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEgressMonitorDest
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIngressMonitorDest
</UL>

<P><STRONG><a name="[177]"></a>gsysGetMonitorMgmtCtrl</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables2X
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMirrorDest
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPDest
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEgressMonitorDest
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIngressMonitorDest
</UL>

<P><STRONG><a name="[17d]"></a>gpirlActivate</STRONG> (Thumb, 482 bytes, Stack size 88 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlDataToResource
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlWriteResource
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitIRLUnit
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetFcMode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[17f]"></a>gpirlDeactivate</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[181]"></a>gpirlUpdateParam</STRONG> (Thumb, 450 bytes, Stack size 72 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlDataToResource
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlWriteResource
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitIRLUnit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetFcMode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[182]"></a>grcGetPirlFcMode</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadParam
</UL>

<P><STRONG><a name="[184]"></a>gpirlReadParam</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grcGetPirlFcMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlReadResource
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlResourceToData
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[186]"></a>gpirlUpdatePortVec</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[187]"></a>gpirlReadPortVec</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[188]"></a>gpirlGetIngressRateResource</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[189]"></a>gpirlSetCurTimeUpInt</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gtpirl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = gpirlSetCurTimeUpInt &rArr; pirlOperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitialize
</UL>

<P><STRONG><a name="[18b]"></a>gpirlInitialize</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtpirl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = gpirlInitialize &rArr; pirlInitialize &rArr; gpirlSetCurTimeUpInt &rArr; pirlOperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitialize
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[18c]"></a>pirlDumpResource</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[191]"></a>gpirl2WriteResource</STRONG> (Thumb, 694 bytes, Stack size 72 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2InitIRLResource
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DataToResource
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[193]"></a>gpirl2ReadResource</STRONG> (Thumb, 174 bytes, Stack size 72 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadResource
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ResourceToData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[196]"></a>gpirl2DisableResource</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DisableIRLResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[197]"></a>gpirl2SetCurTimeUpInt</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, gtpirl2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = gpirl2SetCurTimeUpInt &rArr; pirl2OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2Initialize
</UL>

<P><STRONG><a name="[199]"></a>gpirl2WriteTSMResource</STRONG> (Thumb, 354 bytes, Stack size 88 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteTSMResource
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2InitIRLResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[19b]"></a>gpirl2ReadTSMResource</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadTSMResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[19d]"></a>gpirl2Initialize</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gtpirl2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = gpirl2Initialize &rArr; pirl2Initialize &rArr; gpirl2SetCurTimeUpInt &rArr; pirl2OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2Initialize
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[19e]"></a>pirl2DumpResource</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1a4]"></a>gpirl3WriteResource</STRONG> (Thumb, 172 bytes, Stack size 80 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3InitIRLResource
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DataToResource
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1a6]"></a>gpirl3ReadResource</STRONG> (Thumb, 156 bytes, Stack size 80 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadResource
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ResourceToData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1a9]"></a>gpirl3DisableResource</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DisableIRLResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1aa]"></a>gpirl3SetCurTimeUpInt</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gtpirl3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = gpirl3SetCurTimeUpInt &rArr; pirl3OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3Initialize
</UL>

<P><STRONG><a name="[1ac]"></a>gpirl3WriteTSMResource</STRONG> (Thumb, 550 bytes, Stack size 80 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteTSMResource
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3InitIRLResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ae]"></a>gpirl3ReadTSMResource</STRONG> (Thumb, 258 bytes, Stack size 72 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadTSMResource
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b0]"></a>gpirl3Initialize</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gtpirl3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = gpirl3Initialize &rArr; pirl3Initialize &rArr; gpirl3SetCurTimeUpInt &rArr; pirl3OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3Initialize
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[1b1]"></a>pirl3DumpResource</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b2]"></a>gportPointDataSet</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetQueueCtrl
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
</UL>

<P><STRONG><a name="[1b4]"></a>gportPointDataGet</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetQueueCtrl
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForceFc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
</UL>

<P><STRONG><a name="[1b6]"></a>gprtSetForceFc</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b7]"></a>gprtGetForceFc</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b8]"></a>gprtSetUseCoreTag</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b9]"></a>gprtGetUseCoreTag</STRONG> (Thumb, 394 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ba]"></a>gprtSetTrailerMode</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1bb]"></a>gprtGetTrailerMode</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1bc]"></a>gprtSetIngressMode</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1bd]"></a>gprtGetIngressMode</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1be]"></a>gprtSetMcRateLimit</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1bf]"></a>gprtGetMcRateLimit</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c0]"></a>gprtSetIGMPSnoop</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c1]"></a>gprtGetIGMPSnoop</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c2]"></a>gprtSetHeaderMode</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c3]"></a>gprtGetHeaderMode</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c4]"></a>gprtSetProtectedMode</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c5]"></a>gprtGetProtectedMode</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c6]"></a>gprtSetForwardUnknown</STRONG> (Thumb, 334 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c7]"></a>gprtGetForwardUnknown</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c8]"></a>gprtSetDropOnLock</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1c9]"></a>gprtGetDropOnLock</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ca]"></a>gprtSetInitialPri</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1cb]"></a>gprtGetInitialPri</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1cc]"></a>gprtSetDoubleTag</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1cd]"></a>gprtGetDoubleTag</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ce]"></a>gprtSetInterswitchPort</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1cf]"></a>gprtGetInterswitchPort</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[115]"></a>gprtSetLearnDisable</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetPAV
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbLearnEnable
</UL>

<P><STRONG><a name="[1d1]"></a>gprtGetLearnDisable</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetPAV
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d3]"></a>gprtSetIgnoreFCS</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d4]"></a>gprtGetIgnoreFCS</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d5]"></a>gprtSetAllowedBad</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d6]"></a>gprtGetAllowedBad</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d7]"></a>gprtSetVTUPriOverride</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d8]"></a>gprtGetVTUPriOverride</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d9]"></a>gprtSetSAPriOverride</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1da]"></a>gprtGetSAPriOverride</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1db]"></a>gprtSetDAPriOverride</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1dc]"></a>gprtGetDAPriOverride</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1dd]"></a>gprtSetCPUPort</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gtportctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = gprtSetCPUPort &rArr; hwSetPortRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[1de]"></a>gprtGetCPUPort</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1df]"></a>gprtSetLockedPort</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e0]"></a>gprtGetLockedPort</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e1]"></a>gprtSetIgnoreWrongData</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e2]"></a>gprtGetIgnoreWrongData</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e3]"></a>gprtSetDiscardTagged</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e4]"></a>gprtGetDiscardTagged</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e5]"></a>gprtSetDiscardUntagged</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e6]"></a>gprtGetDiscardUntagged</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e7]"></a>gprtSetMapDA</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e8]"></a>gprtGetMapDA</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1e9]"></a>gprtSetDefaultForward</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ea]"></a>gprtGetDefaultForward</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1eb]"></a>gprtSetEgressMonitorSource</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ec]"></a>gprtGetEgressMonitorSource</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ed]"></a>gprtSetIngressMonitorSource</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ee]"></a>gprtGetIngressMonitorSource</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ef]"></a>gprtSetMessagePort</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f0]"></a>gprtGetMessagePort</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f1]"></a>gprtSetTrunkPort</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f2]"></a>gprtGetTrunkPort</STRONG> (Thumb, 452 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f3]"></a>gprtGetDiscardBCastMode</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f4]"></a>gprtSetDiscardBCastMode</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f5]"></a>gprtGetFCOnRateLimitMode</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f6]"></a>gprtSetFCOnRateLimitMode</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f7]"></a>gprtSetSAFiltering</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f8]"></a>gprtGetSAFiltering</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1f9]"></a>gprtSetARPtoCPU</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1fa]"></a>gprtGetARPtoCPU</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1fb]"></a>gprtSetEgressFlood</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1fc]"></a>gprtGetEgressFlood</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1fd]"></a>gportSetQueueCtrl</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortSched
</UL>

<P><STRONG><a name="[1fe]"></a>gprtSetPortSched</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetQueueCtrl
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1ff]"></a>gportGetQueueCtrl</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortSched
</UL>

<P><STRONG><a name="[200]"></a>gprtGetPortSched</STRONG> (Thumb, 528 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetQueueCtrl
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[201]"></a>gprtSetProviderTag</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[202]"></a>gprtGetProviderTag</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[203]"></a>gportSetFlowCtrl</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCtoQ
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCtoQ
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCEn
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCEn
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQtoPause
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitIn
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitOut
</UL>

<P><STRONG><a name="[204]"></a>gprtSetPauseLimitOut</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[205]"></a>gportGetFlowCtrl</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTxPFCtoQ
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCtoQ
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRxPFCtoQ
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCtoQ
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTxPFCEn
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCEn
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRxPFCEn
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCEn
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQtoPause
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitIn
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitOut
</UL>

<P><STRONG><a name="[206]"></a>gprtGetPauseLimitOut</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[207]"></a>gprtSetPauseLimitIn</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[208]"></a>gprtGetPauseLimitIn</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[209]"></a>gprtSetQtoPause</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20a]"></a>gprtGetQtoPause</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20b]"></a>gprtSetRxPFCEn</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20c]"></a>gprtGetRxPFCEn</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20d]"></a>gprtSetTxPFCEn</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20e]"></a>gprtGetTxPFCEn</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[20f]"></a>gprtSetRxPFCtoQ</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[210]"></a>gprtGetRxPFCtoQ</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[211]"></a>gprtSetTxPFCtoQ</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[212]"></a>gprtGetTxPFCtoQ</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[213]"></a>gprtSetFrameMode</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[214]"></a>gprtGetFrameMode</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[215]"></a>gprtSetHoldAt1</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[216]"></a>gprtGetHoldAt1</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[217]"></a>gprtSetIntOnAgeOut</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[218]"></a>gprtGetIntOnAgeOut</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[219]"></a>gprtSetRefreshLocked</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21a]"></a>gprtGetRefreshLocked</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21b]"></a>gprtSetPortEType</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21c]"></a>gprtGetPortEType</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21d]"></a>gsysSetJumboMode</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21e]"></a>gsysGetJumboMode</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[21f]"></a>gprtGet200Base</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[220]"></a>gprtSet200Base</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[221]"></a>gprtGetSwitchReg</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[222]"></a>gprtSetSwitchReg</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[223]"></a>gprtGetGlobalReg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[224]"></a>gprtSetGlobalReg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[225]"></a>gprtGetGlobal2Reg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[226]"></a>gprtSetGlobal2Reg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[227]"></a>gprtGetGlobal3Reg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[229]"></a>gprtSetGlobal3Reg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[22b]"></a>gprtSetQueueCtrl</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[22c]"></a>gprtGetQueueCtrl</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[22d]"></a>gprtGetDebugCounter</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[22e]"></a>gprtSetCutThrough</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[22f]"></a>gprtGetCutThrough</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[230]"></a>gsysSetDefQpri</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[231]"></a>gsysGetDefQpri</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[232]"></a>gprtSetAllowVid0</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[233]"></a>gprtGetAllowVid0</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[234]"></a>gprtSetPortCtrl3</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[235]"></a>gprtGetPortCtrl3</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtportctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1d0]"></a>gpavSetPAV</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gtportpav.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLearnDisable
</UL>

<P><STRONG><a name="[1d2]"></a>gpavGetPAV</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gtportpav.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLearnDisable
</UL>

<P><STRONG><a name="[236]"></a>gpavSetIngressMonitor</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gtportpav.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[237]"></a>gpavGetIngressMonitor</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, gtportpav.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[23d]"></a>qdUnloadDriver</STRONG> (Thumb, 1066 bytes, Stack size 8 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = qdUnloadDriver &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemDelete
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qd_madInit
</UL>

<P><STRONG><a name="[23f]"></a>qd_madInit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdUnloadDriver
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madStart
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[241]"></a>qdLoadDriver</STRONG> (Thumb, 4062 bytes, Stack size 32 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = qdLoadDriver &rArr; qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCPUPort
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3Initialize
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2Initialize
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlInitialize
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2Cpu
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemCreate
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUPort
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUDest
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverConfig
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qd_madInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdUnloadDriver
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtRegister
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysInitCPUPort
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
</UL>

<P><STRONG><a name="[247]"></a>sysEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = sysEnable &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverEnable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
</UL>

<P><STRONG><a name="[1a2]"></a>qdLong2Char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gtsysconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DataToResource
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPortWakeonFrameEn_11p
</UL>

<P><STRONG><a name="[11e]"></a>qdShort2Char</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gtsysconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
</UL>

<P><STRONG><a name="[258]"></a>qdLong2Short</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, gtsysconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
</UL>

<P><STRONG><a name="[510]"></a>qdLonglong2Long</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, gtsysconfig.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>gsysSwReset</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24a]"></a>gsysSetPPUEn</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24b]"></a>gsysGetPPUEn</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24c]"></a>gsysSetDiscardExcessive</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24d]"></a>gsysGetDiscardExcessive</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24e]"></a>gsysSetSchedulingMode</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[24f]"></a>gsysGetSchedulingMode</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[250]"></a>gsysSetHashMulticast</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[251]"></a>gsysGetHashMulticast</STRONG> (Thumb, 480 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[252]"></a>gsysSetMaxFrameSize</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[253]"></a>gsysGetMaxFrameSize</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[254]"></a>gsysReLoad</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[255]"></a>gsysSetWatchDog</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[256]"></a>gsysGetWatchDog</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[25a]"></a>gsysSetDuplexPauseMac</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[25d]"></a>gsysGetDuplexPauseMac</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[260]"></a>gsysSetPerPortDuplexPauseMac</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMAC
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[263]"></a>gsysGetPerPortDuplexPauseMac</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMAC
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[264]"></a>gsysReadMiiReg</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadMiiReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[266]"></a>gsysWriteMiiReg</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteMiiReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[268]"></a>gsysSetRetransmitMode</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[269]"></a>gsysGetRetransmitMode</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26a]"></a>gsysSetLimitBackoff</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26b]"></a>gsysGetLimitBackoff</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26c]"></a>gsysSetRsvReqPri</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26d]"></a>gsysGetRsvReqPri</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26e]"></a>gsysSetCascadePort</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[26f]"></a>gsysGetCascadePort</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[270]"></a>gsysSetDeviceNumber</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[271]"></a>gsysGetDeviceNumber</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[272]"></a>gsysSetCoreTagType</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[273]"></a>gsysGetCoreTagType</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[274]"></a>gsysSetIngressMonitorDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[275]"></a>gsysGetIngressMonitorDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[276]"></a>gsysSetEgressMonitorDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[277]"></a>gsysGetEgressMonitorDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[278]"></a>gsysSetARPDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = gsysSetARPDest &rArr; gsysSetMonitorMgmtCtrl &rArr; gsysGlobal1PointDataSet &rArr; hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUDest
</UL>

<P><STRONG><a name="[279]"></a>gsysGetARPDest</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCPUDest
</UL>

<P><STRONG><a name="[123]"></a>gsysSetRsvd2CpuEnables</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, gtsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = gsysSetRsvd2CpuEnables &rArr; gsysSetMonitorMgmtCtrl &rArr; gsysGlobal1PointDataSet &rArr; hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[122]"></a>gsysGetRsvd2CpuEnables</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
</UL>

<P><STRONG><a name="[125]"></a>gsysSetRsvd2Cpu</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gtsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = gsysSetRsvd2Cpu &rArr; hwSetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[27b]"></a>gsysGetRsvd2Cpu</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[124]"></a>gsysSetMGMTPri</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
</UL>

<P><STRONG><a name="[27c]"></a>gsysGetMGMTPri</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[27d]"></a>gsysSetUseDoubleTagData</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[27e]"></a>gsysGetUseDoubleTagData</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[27f]"></a>gsysSetPreventLoops</STRONG> (Thumb, 426 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[280]"></a>gsysGetPreventLoops</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[281]"></a>gsysSetFlowControlMessage</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[282]"></a>gsysGetFlowControlMessage</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[283]"></a>gsysSetForceFlowControlPri</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[284]"></a>gsysGetForceFlowControlPri</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[285]"></a>gsysSetFCPri</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[286]"></a>gsysGetFCPri</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[287]"></a>gsysSetFlowCtrlDelay</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[288]"></a>gsysGetFlowCtrlDelay</STRONG> (Thumb, 618 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[289]"></a>gsysSetDevRoutingTable</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28a]"></a>gsysGetDevRoutingTable</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28b]"></a>gsysSetTrunkMaskTable</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28c]"></a>gsysGetTrunkMaskTable</STRONG> (Thumb, 558 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28d]"></a>gsysSetHashTrunk</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28e]"></a>gsysGetHashTrunk</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[28f]"></a>gsysSetTrunkRouting</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Short
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[290]"></a>gsysGetTrunkRouting</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Short
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[291]"></a>gsysSetRateLimitMode</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[292]"></a>gsysGetRateLimitMode</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[293]"></a>gsysSetAgeInt</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[120]"></a>gsysGetAgeInt</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
</UL>

<P><STRONG><a name="[294]"></a>gsysSetForceSnoopPri</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[295]"></a>gsysGetForceSnoopPri</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[296]"></a>gsysSetSnoopPri</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[297]"></a>gsysGetSnoopPri</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[298]"></a>gsysSetForceARPPri</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[299]"></a>gsysGetForceARPPri</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29a]"></a>gsysSetARPPri</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29b]"></a>gsysGetARPPri</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29c]"></a>gsysSetUsePortSchedule</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29d]"></a>gsysGetUsePortSchedule</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29e]"></a>gsysSetOldHader</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[29f]"></a>gsysGetOldHader</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a0]"></a>gsysSetRecursiveStrippingDisable</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a1]"></a>gsysGetRecursiveStrippingDisable</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[245]"></a>gsysSetCPUPort</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = gsysSetCPUPort &rArr; hwSetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[2a2]"></a>gsysGetCPUPort</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[246]"></a>gsysSetCPUDest</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gtsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = gsysSetCPUDest &rArr; gsysSetARPDest &rArr; gsysSetMonitorMgmtCtrl &rArr; gsysGlobal1PointDataSet &rArr; hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPDest
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[2a3]"></a>gsysGetCPUDest</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPDest
</UL>

<P><STRONG><a name="[2a4]"></a>gsysSetMirrorDest</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a5]"></a>gsysGetMirrorDest</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a6]"></a>gsysSetRMPort</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a7]"></a>gsysGetRMPort</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a8]"></a>gsysSetRMDACheck</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2a9]"></a>gsysGetRMDACheck</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2aa]"></a>gsysSetHeaderType</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ab]"></a>gsysGetHeaderType</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ac]"></a>gsysSetRMEnable</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ad]"></a>gsysGetRMEnable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ae]"></a>gsysSetRMUMode</STRONG> (Thumb, 410 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2af]"></a>gsysGetRMUMode</STRONG> (Thumb, 652 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b0]"></a>gsysSetCtrMode</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b1]"></a>gsysGetCtrMode</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b2]"></a>gsysSetRsvd2CpuEnables2X</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b3]"></a>gsysGetRsvd2CpuEnables2X</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b4]"></a>gsysSetLoopbackFilter</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b5]"></a>gsysGetLoopbackFilter</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b6]"></a>gsysSetFloodBC</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b7]"></a>gsysGetFloodBC</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b8]"></a>gsysSetRemove1PTag</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2b9]"></a>gsysGetRemove1PTag</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ba]"></a>gsysSetTagFlowControl</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2bb]"></a>gsysGetTagFlowControl</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2bc]"></a>gsysSetAlwaysUseVTU</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2bd]"></a>gsysGetAlwaysUseVTU</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2be]"></a>gsysSetQVlansOnly</STRONG> (Thumb, 426 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2bf]"></a>gsysGetQVlansOnly</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c0]"></a>gsysSet5BitPort</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c1]"></a>gsysGet5BitPort</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c2]"></a>gsysSetSDETPolarity</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c3]"></a>gsysGetSDETPolarity</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c4]"></a>gsysSetARPwoBC</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c5]"></a>gsysGetARPwoBC</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c6]"></a>gsysSetCLK125En</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c7]"></a>gsysGetCLK125En</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c8]"></a>gsysPort2Lport</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port2lport
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2c9]"></a>gsysLport2Port</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ca]"></a>gsysPortvec2Lportvec</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portvec2lportvec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2cb]"></a>gsysLportvec2Portvec</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lportvec2portvec
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2cd]"></a>gsysSetPortWakeonFrameEn_11p</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Char
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2cf]"></a>gsysGetPortWakeonFrameEn_11p</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d0]"></a>gsysGetPortWakeonFrameEnSt_11p</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d1]"></a>gsysSetWoLMac</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d2]"></a>gsysGetWoLMac</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d3]"></a>gsysSetPerPortWoLMac</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMACWoL
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d4]"></a>gsysGetPerPortWoLMac</STRONG> (Thumb, 408 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMACWoL
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d5]"></a>gsysSetWoLPass</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d6]"></a>gsysGetWoLPass</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d7]"></a>gsysSetWolControl</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d8]"></a>gsysGetWolControl</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2d9]"></a>gsysSetWolControlMc</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2da]"></a>gsysGetWolControlMc</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2db]"></a>gsysGetWakeupSource</STRONG> (Thumb, 380 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2dc]"></a>gsysClearWakeupSource</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2dd]"></a>gsysSetGenMac</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2de]"></a>gsysGetGenMac</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2df]"></a>gsysSetCutThroughHold</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e0]"></a>gsysGetCutThroughHold</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e1]"></a>gsysSetCTTooEarly</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e2]"></a>gsysGetCTTooEarly</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e3]"></a>gsysSetCTTooEarlyIntEn</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e4]"></a>gsysGetCTTooEarlyIntEn</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e5]"></a>gsysSetCutThroughPoint</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2e6]"></a>gsysGetCutThroughPoint</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[f4]"></a>gtMemSet</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, gtutils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gtMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DataToResource
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DataToResource
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCount
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCountInDBNum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCountInDBNum
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCount
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdUnloadDriver
</UL>

<P><STRONG><a name="[104]"></a>gtMemCpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gtutils.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelAtuEntry
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelMacEntry
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryNext
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
</UL>

<P><STRONG><a name="[108]"></a>gtMemCmp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gtutils.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
</UL>

<P><STRONG><a name="[511]"></a>gtStrlen</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gtutils.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>gtDelay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gtutils.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
</UL>

<P><STRONG><a name="[e5]"></a>lport2port</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gtdrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lport2port
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2phy
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetIngressMonitor
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetIngressMonitor
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetPAV
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetPAV
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortCtrl3
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortCtrl3
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowVid0
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowVid0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDefQpri
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDefQpri
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCutThrough
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCutThrough
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDebugCounter
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQueueCtrl
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSwitchReg
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSwitchReg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSet200Base
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGet200Base
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetJumboMode
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetJumboMode
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortEType
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortEType
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRefreshLocked
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRefreshLocked
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIntOnAgeOut
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIntOnAgeOut
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHoldAt1
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHoldAt1
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFrameMode
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFrameMode
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitIn
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitIn
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitOut
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitOut
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProviderTag
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProviderTag
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortSched
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortSched
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressFlood
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressFlood
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetARPtoCPU
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetARPtoCPU
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAFiltering
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAFiltering
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFCOnRateLimitMode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFCOnRateLimitMode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardBCastMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardBCastMode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrunkPort
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrunkPort
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMessagePort
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMessagePort
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMonitorSource
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMonitorSource
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressMonitorSource
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressMonitorSource
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDefaultForward
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDefaultForward
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMapDA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMapDA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardUntagged
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardUntagged
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardTagged
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardTagged
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreWrongData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreWrongData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLockedPort
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLockedPort
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCPUPort
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCPUPort
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDAPriOverride
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDAPriOverride
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAPriOverride
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAPriOverride
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetVTUPriOverride
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetVTUPriOverride
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowedBad
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowedBad
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreFCS
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreFCS
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLearnDisable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInterswitchPort
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInterswitchPort
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDoubleTag
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDoubleTag
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInitialPri
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInitialPri
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDropOnLock
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDropOnLock
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForwardUnknown
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForwardUnknown
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProtectedMode
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProtectedMode
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHeaderMode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHeaderMode
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIGMPSnoop
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIGMPSnoop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMcRateLimit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMcRateLimit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMode
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrailerMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrailerMode
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetUseCoreTag
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetUseCoreTag
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForceFc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadTSMResource
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteTSMResource
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3DisableResource
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadResource
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteResource
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadTSMResource
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteTSMResource
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2DisableResource
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadResource
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteResource
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlInitialize
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlGetIngressRateResource
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grcGetPirlFcMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetFcMode
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLearnDisable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMoveInDB
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMove
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnCnt
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnLimit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetPortAtuLearnLimit
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysLport2Port
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMUMode
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMPort
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMirrorDest
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPDest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEgressMonitorDest
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIngressMonitorDest
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCascadePort
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUPort
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysInitCPUPort
</UL>

<P><STRONG><a name="[11f]"></a>port2lport</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gtdrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = port2lport
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCPUPort
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysPort2Lport
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMUMode
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMPort
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMirrorDest
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCPUPort
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPDest
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEgressMonitorDest
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIngressMonitorDest
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCascadePort
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[110]"></a>lportvec2portvec</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetPAV
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetMode
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysLportvec2Portvec
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSDETPolarity
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
</UL>

<P><STRONG><a name="[105]"></a>portvec2lportvec</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetPAV
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryNext
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysPortvec2Lportvec
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSDETPolarity
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
</UL>

<P><STRONG><a name="[2e7]"></a>lport2phy</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
</UL>

<P><STRONG><a name="[243]"></a>driverConfig</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gtdrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = driverConfig &rArr; miiSmiIfInit &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiManualIfInit
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[248]"></a>driverEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gtdrvconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysEnable
</UL>

<P><STRONG><a name="[512]"></a>driverGetSerdesPort</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, gtdrvconfig.o(.text), UNUSED)

<P><STRONG><a name="[2eb]"></a>driverIsPhyAttached</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyID
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ec]"></a>driverGetPhyID</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyID
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2ed]"></a>driverPagedAccessStart</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2f0]"></a>driverPagedAccessStop</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2f1]"></a>driverFindPhyInformation</STRONG> (Thumb, 740 bytes, Stack size 32 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[2f3]"></a>portToSmiMapping</STRONG> (Thumb, 320 bytes, Stack size 12 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = portToSmiMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal3RegField
</UL>

<P><STRONG><a name="[2f9]"></a>phyRegReadPPUEn</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = phyRegReadPPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
</UL>

<P><STRONG><a name="[238]"></a>hwReadPhyReg</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = hwReadPhyReg &rArr; coreReadPhyReg &rArr; phyRegReadPPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyID
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSMIRead
</UL>

<P><STRONG><a name="[2fc]"></a>phyRegWritePPUEn</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = phyRegWritePPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
</UL>

<P><STRONG><a name="[239]"></a>hwWritePhyReg</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = hwWritePhyReg &rArr; coreWritePhyReg &rArr; phyRegWritePPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSMIWrite
</UL>

<P><STRONG><a name="[2ee]"></a>hwGetPhyRegField</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverPagedAccessStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyInformation
</UL>

<P><STRONG><a name="[2ef]"></a>hwSetPhyRegField</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverPagedAccessStop
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverPagedAccessStart
</UL>

<P><STRONG><a name="[2ff]"></a>hwReadPagedPhyReg</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
</UL>

<P><STRONG><a name="[301]"></a>hwWritePagedPhyReg</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
</UL>

<P><STRONG><a name="[302]"></a>hwGetPagedPhyRegField</STRONG> (Thumb, 150 bytes, Stack size 64 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[303]"></a>hwSetPagedPhyRegField</STRONG> (Thumb, 178 bytes, Stack size 72 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[304]"></a>hwPhyReset</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[305]"></a>hwSerdesReset</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[1b5]"></a>hwReadPortReg</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortCtrl3
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCutThrough
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDebugCounter
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSwitchReg
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortEType
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
</UL>

<P><STRONG><a name="[1b3]"></a>hwWritePortReg</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortCtrl3
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCutThrough
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSwitchReg
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortEType
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
</UL>

<P><STRONG><a name="[e8]"></a>hwGetPortRegField</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetIngressMonitor
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetPAV
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowVid0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDefQpri
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQueueCtrl
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGet200Base
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetJumboMode
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRefreshLocked
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIntOnAgeOut
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHoldAt1
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFrameMode
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitIn
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitOut
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProviderTag
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortSched
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressFlood
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetARPtoCPU
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAFiltering
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFCOnRateLimitMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardBCastMode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrunkPort
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMessagePort
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMonitorSource
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressMonitorSource
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDefaultForward
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMapDA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardUntagged
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardTagged
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreWrongData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLockedPort
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCPUPort
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDAPriOverride
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAPriOverride
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetVTUPriOverride
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowedBad
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreFCS
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLearnDisable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInterswitchPort
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDoubleTag
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInitialPri
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDropOnLock
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForwardUnknown
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProtectedMode
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHeaderMode
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIGMPSnoop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMcRateLimit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrailerMode
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetUseCoreTag
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForceFc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlGetIngressRateResource
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grcGetPirlFcMode
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAgeInt
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnCnt
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnLimit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRateLimitMode
</UL>

<P><STRONG><a name="[ea]"></a>hwSetPortRegField</STRONG> (Thumb, 542 bytes, Stack size 56 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = hwSetPortRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetIngressMonitor
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetPAV
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowVid0
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDefQpri
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSet200Base
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetJumboMode
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRefreshLocked
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIntOnAgeOut
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHoldAt1
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFrameMode
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitIn
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitOut
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProviderTag
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortSched
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressFlood
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetARPtoCPU
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAFiltering
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFCOnRateLimitMode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardBCastMode
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrunkPort
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMessagePort
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMonitorSource
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressMonitorSource
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDefaultForward
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMapDA
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardUntagged
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardTagged
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreWrongData
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLockedPort
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCPUPort
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDAPriOverride
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAPriOverride
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetVTUPriOverride
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowedBad
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreFCS
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInterswitchPort
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDoubleTag
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInitialPri
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDropOnLock
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForwardUnknown
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProtectedMode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHeaderMode
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIGMPSnoop
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMcRateLimit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrailerMode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetUseCoreTag
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlInitialize
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetFcMode
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLearnDisable
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnCnt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAgeInt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRateLimitMode
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysInitCPUPort
</UL>

<P><STRONG><a name="[e6]"></a>hwSetPortRegBits</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnLimit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetPortAtuLearnLimit
</UL>

<P><STRONG><a name="[f1]"></a>hwReadGlobalReg</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobalReg
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIpMappingPrio
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCoreTagType
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDuplexPauseMac
</UL>

<P><STRONG><a name="[ef]"></a>hwWriteGlobalReg</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = hwWriteGlobalReg &rArr; miiSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobalReg
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIpMappingPrio
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCoreTagType
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDuplexPauseMac
</UL>

<P><STRONG><a name="[ed]"></a>hwGetGlobalRegField</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = hwGetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPPUEn
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIpMappingPrio
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUseIpMappingTable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetMacFPri
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetATUTestMode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearnAVB
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearnEnable
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetMacAvb
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearn2All
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAgingTimeout
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetAtuSize
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPwoBC
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCtrMode
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCtrMode
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMUMode
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMEnable
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHeaderType
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMDACheck
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMPort
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMirrorDest
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCPUPort
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRecursiveStrippingDisable
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetOldHader
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUsePortSchedule
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2Cpu
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPDest
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEgressMonitorDest
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIngressMonitorDest
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDeviceNumber
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCascadePort
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvReqPri
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetLimitBackoff
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRetransmitMode
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPerPortDuplexPauseMac
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWatchDog
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMaxFrameSize
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHashMulticast
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSchedulingMode
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDiscardExcessive
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSwReset
</UL>

<P><STRONG><a name="[f0]"></a>hwSetGlobalRegField</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = hwSetGlobalRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPPUEn
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUseIpMappingTable
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2Cpu
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetMacFPri
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetATUTestMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetLearnAVB
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbLearnEnable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetMacAvb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetLearn2All
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetAgingTimeout
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetAtuSize
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPwoBC
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCtrMode
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMUMode
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMEnable
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHeaderType
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMDACheck
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMPort
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMirrorDest
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRecursiveStrippingDisable
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetOldHader
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUsePortSchedule
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPDest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEgressMonitorDest
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIngressMonitorDest
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDeviceNumber
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCascadePort
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvReqPri
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetLimitBackoff
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRetransmitMode
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPerPortDuplexPauseMac
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWatchDog
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReLoad
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMaxFrameSize
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHashMulticast
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSchedulingMode
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDiscardExcessive
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSwReset
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUPort
</UL>

<P><STRONG><a name="[f5]"></a>hwReadGlobal2Reg</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = hwReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobal2Reg
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetStEeprom
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables2X
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowCtrlDelay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowCtrlDelay
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMACWoL
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMACWoL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
</UL>

<P><STRONG><a name="[f3]"></a>hwWriteGlobal2Reg</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = hwWriteGlobal2Reg &rArr; miiSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobal2Reg
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables2X
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowCtrlDelay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowCtrlDelay
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMACWoL
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMACWoL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
</UL>

<P><STRONG><a name="[12e]"></a>hwGetGlobal2RegField</STRONG> (Thumb, 152 bytes, Stack size 48 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAgeInt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCutThroughPoint
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCTTooEarlyIntEn
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCTTooEarly
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCutThroughHold
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCLK125En
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSDETPolarity
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGet5BitPort
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetQVlansOnly
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAlwaysUseVTU
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTagFlowControl
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRemove1PTag
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFloodBC
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetLoopbackFilter
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPPri
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceARPPri
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSnoopPri
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceSnoopPri
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHashTrunk
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFCPri
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceFlowControlPri
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowControlMessage
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPreventLoops
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUseDoubleTagData
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMGMTPri
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2Cpu
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacWolWofReg
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacWolWofReg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMACWoL
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMACWoL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
</UL>

<P><STRONG><a name="[27a]"></a>hwSetGlobal2RegField</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = hwSetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2Cpu
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMGMTPri
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCutThroughPoint
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCTTooEarlyIntEn
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCTTooEarly
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCutThroughHold
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCLK125En
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSDETPolarity
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSet5BitPort
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetQVlansOnly
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAlwaysUseVTU
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTagFlowControl
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRemove1PTag
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFloodBC
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetLoopbackFilter
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPPri
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceARPPri
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSnoopPri
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceSnoopPri
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAgeInt
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHashTrunk
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFCPri
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceFlowControlPri
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowControlMessage
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPreventLoops
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUseDoubleTagData
</UL>

<P><STRONG><a name="[306]"></a>hwSetGlobal2RegBits</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[228]"></a>hwReadGlobal3Reg</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobal3Reg
</UL>

<P><STRONG><a name="[22a]"></a>hwWriteGlobal3Reg</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobal3Reg
</UL>

<P><STRONG><a name="[307]"></a>hwGetGlobal3RegField</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[308]"></a>hwSetGlobal3RegField</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[309]"></a>hwSetGlobal3RegBits</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[265]"></a>hwReadMiiReg</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReadMiiReg
</UL>

<P><STRONG><a name="[267]"></a>hwWriteMiiReg</STRONG> (Thumb, 384 bytes, Stack size 24 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysWriteMiiReg
</UL>

<P><STRONG><a name="[30a]"></a>phyXRegReadPPUEn</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[30b]"></a>phyXRegWritePPUEn</STRONG> (Thumb, 674 bytes, Stack size 40 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[30c]"></a>exPhyRegRead</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[30d]"></a>exPhyRegWrite</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[30e]"></a>smiSetupRead</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[30f]"></a>smiSetupWrite</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[310]"></a>qdMultiAddrRead</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtWriteMii
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtReadMii
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
</UL>

<P><STRONG><a name="[2f4]"></a>miiSmiIfReadRegister</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrRead
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtReadMii
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiManualIfInit
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfInit
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal3RegField
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadMiiReg
</UL>

<P><STRONG><a name="[2e8]"></a>miiSmiIfInit</STRONG> (Thumb, 1304 bytes, Stack size 32 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = miiSmiIfInit &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverConfig
</UL>

<P><STRONG><a name="[2e9]"></a>miiSmiManualIfInit</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = miiSmiManualIfInit &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverConfig
</UL>

<P><STRONG><a name="[313]"></a>qdMultiAddrWrite</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = qdMultiAddrWrite &rArr; fgtWriteMii
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtWriteMii
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtReadMii
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
</UL>

<P><STRONG><a name="[2f5]"></a>miiSmiIfWriteRegister</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = miiSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrWrite
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgtWriteMii
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyWriteGlobal2Reg
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteMiiReg
</UL>

<P><STRONG><a name="[244]"></a>gtSemCreate</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gtsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gtSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[23e]"></a>gtSemDelete</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gtsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gtSemDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdUnloadDriver
</UL>

<P><STRONG><a name="[ec]"></a>gtSemTake</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gtsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gtSemTake
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePagedPhyReg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPagedPhyRegField
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPagedPhyReg
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwPhyReset
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPagedPhyRegField
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQueueCtrl
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePhyReg
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPhyReg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIpMappingPrio
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIpMappingPrio
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal3RegField
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteMiiReg
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadMiiReg
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowCtrlDelay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowCtrlDelay
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSerdesReset
</UL>

<P><STRONG><a name="[ee]"></a>gtSemGive</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gtsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gtSemGive
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePagedPhyReg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPagedPhyRegField
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPagedPhyReg
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwPhyReset
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPagedPhyRegField
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQueueCtrl
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePhyReg
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPhyReg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIpMappingPrio
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIpMappingPrio
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal3RegField
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteMiiReg
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadMiiReg
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowCtrlDelay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowCtrlDelay
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSerdesReset
</UL>

<P><STRONG><a name="[65]"></a>gtBspReadMii</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, ev96122mii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gtBspReadMii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msapiinit.o(.text)
</UL>
<P><STRONG><a name="[66]"></a>gtBspWriteMii</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ev96122mii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gtBspWriteMii
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msapiinit.o(.text)
</UL>
<P><STRONG><a name="[315]"></a>gtBspMiiInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ev96122mii.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
</UL>

<P><STRONG><a name="[c3]"></a>qdStart</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, msapiinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = qdStart &rArr; qdLoadDriver &rArr; qd_madInit &rArr; madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimInit
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtBspMiiInit
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysEnable
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[320]"></a>qdMemSet</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = qdMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUInit
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUInit
</UL>

<P><STRONG><a name="[31a]"></a>qdMemCpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = qdMemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUUpdate
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUAdd
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUAdd
</UL>

<P><STRONG><a name="[513]"></a>qdMemCmp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, qdsim.o(.text), UNUSED)

<P><STRONG><a name="[318]"></a>cmpEtherMac</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = cmpEtherMac
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUDel
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUAdd
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFindNext
</UL>

<P><STRONG><a name="[317]"></a>qdSimATUFindNext</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = qdSimATUFindNext &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmpEtherMac
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[319]"></a>qdSimATUAdd</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = qdSimATUAdd &rArr; qdMemCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmpEtherMac
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[31b]"></a>qdSimATUDel</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = qdSimATUDel &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmpEtherMac
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushUnlockedInDB
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushInDB
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushUnlockedEntry
</UL>

<P><STRONG><a name="[31c]"></a>qdSimATUFlushUnlockedEntry</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = qdSimATUFlushUnlockedEntry &rArr; qdSimATUDel &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUDel
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[31d]"></a>qdSimATUFlushInDB</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = qdSimATUFlushInDB &rArr; qdSimATUDel &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUDel
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[31e]"></a>qdSimATUFlushUnlockedInDB</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = qdSimATUFlushUnlockedInDB &rArr; qdSimATUDel &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUDel
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[31f]"></a>qdSimATUInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = qdSimATUInit &rArr; qdMemSet
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimInit
</UL>

<P><STRONG><a name="[322]"></a>qdSimGetATUInfo</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[324]"></a>qdSimSetATUInfo</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[323]"></a>qdSimReSetATUInfo</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>

<P><STRONG><a name="[321]"></a>qdSimATUOperation</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = qdSimATUOperation &rArr; qdSimATUFlushUnlockedInDB &rArr; qdSimATUDel &rArr; cmpEtherMac
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimReSetATUInfo
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimSetATUInfo
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimGetATUInfo
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUInit
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushUnlockedInDB
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushInDB
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFlushUnlockedEntry
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUDel
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUAdd
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUFindNext
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6052
</UL>

<P><STRONG><a name="[32c]"></a>qdSimVTUFindNext</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimVTUFindNext
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[325]"></a>qdSimVTUAdd</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = qdSimVTUAdd &rArr; qdMemCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemCpy
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[32b]"></a>qdSimVTUDel</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = qdSimVTUDel
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[326]"></a>qdSimVTUUpdate</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, qdsim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemCpy
</UL>

<P><STRONG><a name="[327]"></a>qdSimVTUInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = qdSimVTUInit &rArr; qdMemSet
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemSet
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimInit
</UL>

<P><STRONG><a name="[32a]"></a>qdSimGetVTUInfo</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[32e]"></a>qdSimSetVTUInfo</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[32d]"></a>qdSimReSetVTUInfo</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[32f]"></a>qdSimVTUGetViolation</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[329]"></a>qdSimVTUResetBusy</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
</UL>

<P><STRONG><a name="[328]"></a>qdSimVTUOperation</STRONG> (Thumb, 164 bytes, Stack size 36 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = qdSimVTUOperation &rArr; qdSimVTUAdd &rArr; qdMemCpy
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUResetBusy
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUGetViolation
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimReSetVTUInfo
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimSetVTUInfo
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimGetVTUInfo
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUInit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUDel
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUAdd
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUFindNext
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
</UL>

<P><STRONG><a name="[514]"></a>qdSimStatsInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, qdsim.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>qdSimStatsOperation</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimStatsOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
</UL>

<P><STRONG><a name="[339]"></a>qdSimPhyControl</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimPhyControl
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6052
</UL>

<P><STRONG><a name="[331]"></a>qdSimRegsInit_6021</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
</UL>

<P><STRONG><a name="[332]"></a>qdSimRegsInit_6063</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
</UL>

<P><STRONG><a name="[333]"></a>qdSimRegsInit_6083</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, qdsim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
</UL>

<P><STRONG><a name="[330]"></a>qdSimRegsInit</STRONG> (Thumb, 704 bytes, Stack size 16 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit_6083
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit_6063
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit_6021
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMemSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6052
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimInit
</UL>

<P><STRONG><a name="[334]"></a>qdSimRead_6052</STRONG> (Thumb, 486 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimRead_6052
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead
</UL>

<P><STRONG><a name="[335]"></a>qdSimRead_6021</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimRead_6021
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead
</UL>

<P><STRONG><a name="[336]"></a>qdSimRead_6063</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimRead_6063
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead
</UL>

<P><STRONG><a name="[337]"></a>qdSimRead_6083</STRONG> (Thumb, 354 bytes, Stack size 8 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = qdSimRead_6083
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead
</UL>

<P><STRONG><a name="[67]"></a>qdSimRead</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = qdSimRead &rArr; qdSimRead_6083
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead_6083
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead_6063
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead_6021
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRead_6052
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msapiinit.o(.text)
</UL>
<P><STRONG><a name="[338]"></a>qdSimWrite_6052</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = qdSimWrite_6052 &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimPhyControl
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite
</UL>

<P><STRONG><a name="[33a]"></a>qdSimWrite_6021</STRONG> (Thumb, 572 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = qdSimWrite_6021 &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimPhyControl
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimStatsOperation
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite
</UL>

<P><STRONG><a name="[33c]"></a>qdSimWrite_6063</STRONG> (Thumb, 564 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = qdSimWrite_6063 &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimPhyControl
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimStatsOperation
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite
</UL>

<P><STRONG><a name="[33d]"></a>qdSimWrite_6083</STRONG> (Thumb, 576 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = qdSimWrite_6083 &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimPhyControl
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimStatsOperation
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUOperation
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite
</UL>

<P><STRONG><a name="[68]"></a>qdSimWrite</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = qdSimWrite &rArr; qdSimWrite_6083 &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6083
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6063
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6021
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimWrite_6052
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msapiinit.o(.text)
</UL>
<P><STRONG><a name="[515]"></a>qdSimSetPhyInt</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, qdsim.o(.text), UNUSED)

<P><STRONG><a name="[516]"></a>qdSimSetGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, qdsim.o(.text), UNUSED)

<P><STRONG><a name="[316]"></a>qdSimInit</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, qdsim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = qdSimInit &rArr; qdSimRegsInit &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimVTUInit
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimATUInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
</UL>

<P><STRONG><a name="[33e]"></a>mdCopperSetAutoNeg</STRONG> (Thumb, 688 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysModSoftReset
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetSpeedDuplex
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_phy_speed_duplex
</UL>

<P><STRONG><a name="[346]"></a>mdCopperGetAutoNeg</STRONG> (Thumb, 728 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[347]"></a>mdCopperSetAutoRestart</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[517]"></a>mdGetAutoNegoMode</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, madcpctrl.o(.text), UNUSED)

<P><STRONG><a name="[348]"></a>mdCopperSetMDIMode</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[349]"></a>mdCopperGetMDIMode</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[34b]"></a>mdCopperSetDownshiftEnable</STRONG> (Thumb, 594 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[34c]"></a>mdCopperGetDownshiftEnable</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[350]"></a>mdCopperSetDTEDetectEnable</STRONG> (Thumb, 612 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy1000M
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy100M
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[352]"></a>mdCopperGetDTEDetectEnable</STRONG> (Thumb, 520 bytes, Stack size 48 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[354]"></a>mdCopperSetLinkDownDelay</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[355]"></a>mdCopperGetLinkDownDelay</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[356]"></a>mdCopperSetLinkDownDelayEnable</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[357]"></a>mdCopperGetLinkDownDelayEnable</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[358]"></a>mdCopperSetSpeedDuplex</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[359]"></a>mdCopperSet1000TMasterMode</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[35a]"></a>mdCopperGet1000TMasterMode</STRONG> (Thumb, 638 bytes, Stack size 40 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[35b]"></a>mdGetPhyCopperReg</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[35c]"></a>mdSetPhyCopperReg</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[35e]"></a>mdIntSetEnable</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, madint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = mdIntSetEnable &rArr; mdIntSetEnable_f &rArr; madHwWritePagedPhyReg &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable_f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdUnloadDriver
</UL>

<P><STRONG><a name="[360]"></a>mdIntGetEnable</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable_f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[362]"></a>mdIntGetStatus</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus_f
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[363]"></a>mdIntGetPortSummary</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[364]"></a>mdTempIntSetEnable</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[365]"></a>mdTempIntGetEnable</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[366]"></a>mdTempIntGetStatus</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[36b]"></a>madShort2Char</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, madsysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[23b]"></a>mdLoadDriver</STRONG> (Thumb, 746 bytes, Stack size 32 bytes, madsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPhyEnable
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetDetectPowerDownMode
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemCreate
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madFindPhyInformation
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDriverConfig
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madShort2Char
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnRegister
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madStart
</UL>

<P><STRONG><a name="[371]"></a>mdUnloadDriver</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, madsysconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemDelete
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madMemSet
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[518]"></a>madLong2Char</STRONG> (Thumb, 752 bytes, Stack size 0 bytes, madsysconfig.o(.text), UNUSED)

<P><STRONG><a name="[424]"></a>madLong2Short</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, madsysconfig.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
</UL>

<P><STRONG><a name="[519]"></a>madLonglong2Long</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, madsysconfig.o(.text), UNUSED)

<P><STRONG><a name="[375]"></a>mdGetLinkStatus</STRONG> (Thumb, 428 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus_
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[376]"></a>mdGetSpeedStatus</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetMacSpeedStatus
</UL>

<P><STRONG><a name="[377]"></a>mdGetMacSpeedStatus</STRONG> (Thumb, 606 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetSpeedStatus
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus_
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[378]"></a>mdGetDuplexStatus</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[379]"></a>mdSysGetPhyReg</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPhyReg
</UL>

<P><STRONG><a name="[37b]"></a>mdSysSetPhyReg</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
</UL>

<P><STRONG><a name="[37d]"></a>mdSysGetPagedPhyReg</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[37e]"></a>mdSysSetPagedPhyReg</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[36f]"></a>mdSysSetPhyEnable</STRONG> (Thumb, 360 bytes, Stack size 40 bytes, madsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = mdSysSetPhyEnable &rArr; madHwSetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[37f]"></a>mdSysGetPhyEnable</STRONG> (Thumb, 674 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[380]"></a>mdSysSetQSGMIIPwDown</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[381]"></a>mdSysGetQSGMIIPwDown</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[382]"></a>mdSysSoftReset</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMacPowerDown
</UL>

<P><STRONG><a name="[345]"></a>mdSysModSoftReset</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
</UL>

<P><STRONG><a name="[383]"></a>mdSysSetMacPowerDown</STRONG> (Thumb, 682 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madGetHwMode
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSoftReset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[385]"></a>mdSysGetMacPowerDown</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madGetHwMode
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[386]"></a>mdSysGetDetectPowerDownModeSt</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[370]"></a>mdSysSetDetectPowerDownMode</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, madsysctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = mdSysSetDetectPowerDownMode &rArr; madHwSetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[387]"></a>mdSysGetDetectPowerDownMode</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[388]"></a>mdSysSetEEELPIMode</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIMode
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[38a]"></a>mdSysGetEEELPIMode</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIMode
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[38c]"></a>mdSysSetSnoopCtrl</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[38d]"></a>mdSysGetSnoopCtrl</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[38e]"></a>mdSysSetLEDCtrl</STRONG> (Thumb, 636 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[38f]"></a>mdSysGetLEDCtrl</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[390]"></a>mdSysSetUniDirTrans</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[391]"></a>mdSysGetUniDirTrans</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[392]"></a>mdSetEEELPIInterrupt</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterrupt
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[394]"></a>mdGetEEELPIInterrupt</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterrupt
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[396]"></a>mdSetEEELPIInterruptMask</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterruptMask
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[398]"></a>mdGetEEELPIInterruptMask</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterruptMask
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[39a]"></a>mdSetEEELPIIgrBuffThresh</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrBuffThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[39c]"></a>mdGetEEELPIIgrBuffThresh</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrBuffThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[39e]"></a>mdSetEEELPIEEEBuffThresh</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIEEEBuffThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a0]"></a>mdGetEEELPIEEEBuffThresh</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIEEEBuffThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a2]"></a>mdSetEEELPIIgrDscThresh</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrDscThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a4]"></a>mdGetEEELPIIgrDscThresh</STRONG> (Thumb, 434 bytes, Stack size 24 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrDscThresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a6]"></a>mdSysSetAutoSelect</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a7]"></a>mdSysGetAutoSelect</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a8]"></a>mdSysSetPreferredMedia</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3a9]"></a>mdSysGetPreferredMedia</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3aa]"></a>mdSysSetMediaMode</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3ab]"></a>mdSysGetMediaMode</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[36d]"></a>madDevPreInit</STRONG> (Thumb, 826 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = madDevPreInit &rArr; runOnce88E1680 &rArr; madHwSetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1680
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1240
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1149
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1121
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E3082
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E3016
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E114X
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1116
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1112
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1111
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E104X
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1181
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[368]"></a>madDriverConfig</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = madDriverConfig &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[3b8]"></a>madPagedAccessStart</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, maddrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3b9]"></a>madPagedAccessStop</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, maddrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[384]"></a>madGetHwMode</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, maddrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMacPowerDown
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMacPowerDown
</UL>

<P><STRONG><a name="[36c]"></a>madFindPhyInformation</STRONG> (Thumb, 2936 bytes, Stack size 32 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_18
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_6
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_16_2
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_27_0
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[33f]"></a>mad_lport2port</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mad_lport2port
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysModSoftReset
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGet1000TMasterMode
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSet1000TMasterMode
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelayEnable
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelayEnable
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelay
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelay
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDTEDetectEnable
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDownshiftEnable
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDownshiftEnable
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetMDIMode
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetMDIMode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoRestart
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetAutoNeg
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMediaMode
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMediaMode
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPreferredMedia
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPreferredMedia
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetAutoSelect
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetAutoSelect
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrDscThresh
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrDscThresh
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIEEEBuffThresh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIEEEBuffThresh
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrBuffThresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrBuffThresh
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterruptMask
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterruptMask
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterrupt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterrupt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetUniDirTrans
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetUniDirTrans
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetLEDCtrl
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetLEDCtrl
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetSnoopCtrl
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetSnoopCtrl
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetEEELPIMode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetEEELPIMode
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownMode
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownModeSt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMacPowerDown
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMacPowerDown
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetQSGMIIPwDown
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetQSGMIIPwDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPhyEnable
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetMacSpeedStatus
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetSpeedStatus
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus_
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPhyEnable
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetDetectPowerDownMode
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSoftReset
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetDuplexStatus
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetStatus
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetEnable
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntSetEnable
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus_f
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable_f
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable_f
</UL>

<P><STRONG><a name="[51a]"></a>mad_port2lport</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, maddrvconfig.o(.text), UNUSED)

<P><STRONG><a name="[37a]"></a>madHwReadPhyReg</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPhyReg
</UL>

<P><STRONG><a name="[37c]"></a>madHwWritePhyReg</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = madHwWritePhyReg &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1181
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPhyReg
</UL>

<P><STRONG><a name="[353]"></a>madHwGetPhyRegField</STRONG> (Thumb, 186 bytes, Stack size 56 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDTEDetectEnable
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madPagedAccessStart
</UL>

<P><STRONG><a name="[351]"></a>madHwSetPhyRegField</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDTEDetectEnable
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madPagedAccessStop
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madPagedAccessStart
</UL>

<P><STRONG><a name="[340]"></a>madHwReadPagedPhyReg</STRONG> (Thumb, 294 bytes, Stack size 56 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetPhyCopperReg
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetAutoNeg
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMediaMode
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMediaMode
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetAutoSelect
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetAutoSelect
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetUniDirTrans
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetUniDirTrans
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetLEDCtrl
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetEEELPIMode
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPagedPhyReg
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetMacSpeedStatus
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetSpeedStatus
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetDuplexStatus
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus_f
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable_f
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_macsec_clk
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_dis_macsec_clk
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_testchip_revision
</UL>

<P><STRONG><a name="[341]"></a>madHwWritePagedPhyReg</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = madHwWritePagedPhyReg &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetPhyCopperReg
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy1000M
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy100M
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1680
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1149
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1181
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMediaMode
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetAutoSelect
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetUniDirTrans
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetLEDCtrl
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetEEELPIMode
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPagedPhyReg
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable_f
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_macsec_clk
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_dis_macsec_clk
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_force_macsec_rst
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_testchip_revision
</UL>

<P><STRONG><a name="[34a]"></a>madHwGetPagedPhyRegField</STRONG> (Thumb, 338 bytes, Stack size 80 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGet1000TMasterMode
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelayEnable
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelay
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDTEDetectEnable
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDownshiftEnable
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetMDIMode
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_18
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_6
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_16_2
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_27_0
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madGetHwMode
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPreferredMedia
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetUniDirTrans
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetSnoopCtrl
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetEEELPIMode
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownMode
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownModeSt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMacPowerDown
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetQSGMIIPwDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPhyEnable
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus_
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetStatus
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetEnable
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetPortSummary
</UL>

<P><STRONG><a name="[344]"></a>madHwSetPagedPhyRegField</STRONG> (Thumb, 568 bytes, Stack size 72 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = madHwSetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysModSoftReset
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSet1000TMasterMode
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelayEnable
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelay
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDownshiftEnable
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetMDIMode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoRestart
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1680
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPreferredMedia
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetUniDirTrans
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetSnoopCtrl
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetEEELPIMode
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMacPowerDown
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetQSGMIIPwDown
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPhyEnable
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetDetectPowerDownMode
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntSetEnable
</UL>

<P><STRONG><a name="[342]"></a>madHwPagedSetCtrlPara</STRONG> (Thumb, 418 bytes, Stack size 72 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
</UL>

<P><STRONG><a name="[343]"></a>madHwPagedReset</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysModSoftReset
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSet1000TMasterMode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDownshiftEnable
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetMDIMode
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSoftReset
</UL>

<P><STRONG><a name="[3c2]"></a>madHw45ReadPhyReg</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madXSmiIfReadRegister
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45SetPhyRegField
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45GetPhyRegField
</UL>

<P><STRONG><a name="[3c4]"></a>madHw45WritePhyReg</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madXSmiIfWriteRegister
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45SetPhyRegField
</UL>

<P><STRONG><a name="[3c6]"></a>madHw45GetPhyRegField</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3c7]"></a>madHw45SetPhyRegField</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, madhwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemTake
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSemGive
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[373]"></a>madMemSet</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, madutils.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdUnloadDriver
</UL>

<P><STRONG><a name="[51b]"></a>madMemCpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, madutils.o(.text), UNUSED)

<P><STRONG><a name="[51c]"></a>madMemCmp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, madutils.o(.text), UNUSED)

<P><STRONG><a name="[51d]"></a>madStrlen</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, madutils.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>madSemCreate</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, madsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = madSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[372]"></a>madSemDelete</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, madsem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdUnloadDriver
</UL>

<P><STRONG><a name="[3be]"></a>madSemTake</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, madsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = madSemTake
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45SetPhyRegField
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPhyReg
</UL>

<P><STRONG><a name="[3bf]"></a>madSemGive</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, madsem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = madSemGive
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45SetPhyRegField
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPhyReg
</UL>

<P><STRONG><a name="[36a]"></a>madSmiIfReadRegister</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, madsmiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = madSmiIfReadRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPhyReg
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDriverConfig
</UL>

<P><STRONG><a name="[369]"></a>madSmiIfWriteRegister</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, madsmiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDriverConfig
</UL>

<P><STRONG><a name="[3c3]"></a>madXSmiIfReadRegister</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, madsmiif.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
</UL>

<P><STRONG><a name="[3c5]"></a>madXSmiIfWriteRegister</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, madsmiif.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
</UL>

<P><STRONG><a name="[43a]"></a>aes_encrypt</STRONG> (Thumb, 3514 bytes, Stack size 48 bytes, aescrypt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_hkey
</UL>

<P><STRONG><a name="[3c9]"></a>aes_encrypt_key128</STRONG> (Thumb, 1064 bytes, Stack size 24 bytes, aeskey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key
</UL>

<P><STRONG><a name="[3ca]"></a>aes_encrypt_key192</STRONG> (Thumb, 1096 bytes, Stack size 32 bytes, aeskey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key
</UL>

<P><STRONG><a name="[3cb]"></a>aes_encrypt_key256</STRONG> (Thumb, 1448 bytes, Stack size 40 bytes, aeskey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key
</UL>

<P><STRONG><a name="[3c8]"></a>aes_encrypt_key</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, aeskey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key256
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key192
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key128
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_hkey
</UL>

<P><STRONG><a name="[3cc]"></a>msecWritePortReg</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIMode
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterruptMask
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterrupt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrDscThresh
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrBuffThresh
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIEEEBuffThresh
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_PTP
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_fips_vec
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_nxtpn_ent
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_enable_non_disruptive_loopback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_mac_frame_size_limit
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_macsec_speed_duplex
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_force_flow_ctrl_en
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_etm_cfg
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_sci_info
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_rpy_var
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_redir_vec
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_igr_cfg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_redir_sa
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_en
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_act_fld
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_fld
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ikey_entry
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ihkey_entry
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_entry
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_act_fld
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_en
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_fld
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ect_entry
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ekey_entry
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ehkey_entry
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_entry
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_autoneg
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_flow_ctrl
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_en_dis
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_rst
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_ctrl
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_speed
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_cmn_cfg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_egr_cfg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_def_act
</UL>

<P><STRONG><a name="[3ce]"></a>msecReadPortReg</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIMode
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterruptMask
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterrupt
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrDscThresh
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrBuffThresh
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIEEEBuffThresh
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_PTP
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_fips_obv
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_enable_non_disruptive_loopback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_mac_frame_size_limit
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_macsec_speed_duplex
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_force_flow_ctrl_en
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_etm_cfg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_sci_info
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_rpy_var
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_redir_vec
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_def_act
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_cfg
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_rpy_var
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_redir_vec
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_igr_cfg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_cfg
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_cmn_cfg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_redir_sa
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_act
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_match_en
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_match_fld
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_entry
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ikey_entry
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ihkey_entry
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_nxtpn_entry
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_en
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_act_fld
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_fld
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_entry
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_act
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_match_en
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_match_fld
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_entry
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ect_entry
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ekey_entry
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ehkey_entry
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_act_fld
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_en
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_fld
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_speed
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_en_dis
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_ctrl
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_rst
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_cmn_cfg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_egr_cfg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_def_act
</UL>

<P><STRONG><a name="[3d0]"></a>check_testchip_revision</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3d1]"></a>msec_stat_init</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_mib_stat
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_macsec_stat
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
</UL>

<P><STRONG><a name="[3d5]"></a>msec_port_set_igr_def_act</STRONG> (Thumb, 784 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
</UL>

<P><STRONG><a name="[3d6]"></a>msec_port_egr_cfg</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
</UL>

<P><STRONG><a name="[3d7]"></a>msec_port_cmn_cfg</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
</UL>

<P><STRONG><a name="[3d8]"></a>msec_port_dis_ilu_ent</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
</UL>

<P><STRONG><a name="[3d9]"></a>msec_port_dis_elu_ent</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
</UL>

<P><STRONG><a name="[3da]"></a>msec_port_macsec_init</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
</UL>

<P><STRONG><a name="[3db]"></a>msec_maxwell_ae_start_init</STRONG> (Thumb, 262 bytes, Stack size 96 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_cmn_cfg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_egr_cfg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_def_act
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
</UL>

<P><STRONG><a name="[3dc]"></a>msec_port_set_mac_link</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_autoneg
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_flow_ctrl
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_speed
</UL>

<P><STRONG><a name="[3dd]"></a>msec_port_set_mac_speed</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
</UL>

<P><STRONG><a name="[3de]"></a>msec_port_set_mac_ctrl</STRONG> (Thumb, 634 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
</UL>

<P><STRONG><a name="[3df]"></a>msec_port_set_mac_rst</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
</UL>

<P><STRONG><a name="[3e0]"></a>msec_port_mac_init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_rst
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_ctrl
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_speed
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_mac_cfg
</UL>

<P><STRONG><a name="[3e1]"></a>msec_mac_cfg</STRONG> (Thumb, 160 bytes, Stack size 64 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
</UL>

<P><STRONG><a name="[3e2]"></a>msec_port_get_mac_ctrl</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_var
</UL>

<P><STRONG><a name="[3e4]"></a>msec_port_mac_en_dis</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3e5]"></a>msec_port_set_flow_ctrl</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3e6]"></a>msec_port_set_autoneg</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3e7]"></a>msec_port_get_mac_speed</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_var
</UL>

<P><STRONG><a name="[3e8]"></a>msec_port_get_mac_var</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_speed
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_ctrl
</UL>

<P><STRONG><a name="[3e9]"></a>msec_port_set_elu_entry</STRONG> (Thumb, 664 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
</UL>

<P><STRONG><a name="[3ea]"></a>msec_port_set_ehkey_entry</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
</UL>

<P><STRONG><a name="[3eb]"></a>msec_port_set_ekey_entry</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
</UL>

<P><STRONG><a name="[3ec]"></a>msec_port_set_ect_entry</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
</UL>

<P><STRONG><a name="[3ed]"></a>msec_port_set_egr_entry</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_hkey
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ect_entry
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ekey_entry
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ehkey_entry
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_entry
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
</UL>

<P><STRONG><a name="[3ef]"></a>msec_port_set_elu_match_fld</STRONG> (Thumb, 362 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3f0]"></a>msec_port_set_elu_match_en</STRONG> (Thumb, 534 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3f1]"></a>msec_port_set_elu_act_fld</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3f2]"></a>msec_port_get_ehkey_entry</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_entry
</UL>

<P><STRONG><a name="[3f3]"></a>msec_port_get_ekey_entry</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_entry
</UL>

<P><STRONG><a name="[3f4]"></a>msec_port_get_ect_entry</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_entry
</UL>

<P><STRONG><a name="[3f5]"></a>msec_port_get_elu_entry</STRONG> (Thumb, 506 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_entry
</UL>

<P><STRONG><a name="[3f6]"></a>msec_port_get_egr_entry</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_entry
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ect_entry
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ekey_entry
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ehkey_entry
</UL>

<P><STRONG><a name="[3f7]"></a>msec_port_get_elu_match_fld</STRONG> (Thumb, 518 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[3f8]"></a>msec_port_get_elu_match_en</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[3f9]"></a>msec_port_get_elu_act</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[3fa]"></a>msec_port_set_ilu_entry</STRONG> (Thumb, 848 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
</UL>

<P><STRONG><a name="[3fb]"></a>msec_port_set_ihkey_entry</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
</UL>

<P><STRONG><a name="[3fc]"></a>msec_port_set_ikey_entry</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
</UL>

<P><STRONG><a name="[3fd]"></a>msec_port_set_igr_entry</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_nxtpn_ent
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_hkey
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ikey_entry
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ihkey_entry
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_entry
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
</UL>

<P><STRONG><a name="[3ff]"></a>msec_port_set_ilu_match_fld</STRONG> (Thumb, 716 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[400]"></a>msec_port_set_ilu_act_fld</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[401]"></a>msec_port_set_ilu_match_en</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[402]"></a>msec_port_get_nxtpn_entry</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_entry
</UL>

<P><STRONG><a name="[403]"></a>msec_port_get_ihkey_entry</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_entry
</UL>

<P><STRONG><a name="[404]"></a>msec_port_get_ikey_entry</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_entry
</UL>

<P><STRONG><a name="[405]"></a>msec_port_get_ilu_entry</STRONG> (Thumb, 770 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_entry
</UL>

<P><STRONG><a name="[406]"></a>msec_port_get_igr_entry</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_entry
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ikey_entry
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ihkey_entry
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_nxtpn_entry
</UL>

<P><STRONG><a name="[407]"></a>msec_port_get_ilu_match_fld</STRONG> (Thumb, 492 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[408]"></a>msec_port_get_ilu_match_en</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[409]"></a>msec_port_get_ilu_act</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[40a]"></a>msec_port_set_redir_sa</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_redir_hdr
</UL>

<P><STRONG><a name="[40b]"></a>msec_set_redir_hdr</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_redir_sa
</UL>

<P><STRONG><a name="[40c]"></a>msec_port_get_redir_sa</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_get_redir_hdr
</UL>

<P><STRONG><a name="[40d]"></a>msec_get_redir_hdr</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_redir_sa
</UL>

<P><STRONG><a name="[40e]"></a>msec_port_get_cmn_cfg</STRONG> (Thumb, 438 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[40f]"></a>msec_port_get_egr_cfg</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[410]"></a>msec_port_igr_cfg</STRONG> (Thumb, 950 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[411]"></a>msec_port_set_igr_redir_vec</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[412]"></a>msec_port_set_igr_rpy_var</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[413]"></a>msec_port_set_igr_sci_info</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[414]"></a>msec_port_get_igr_cfg</STRONG> (Thumb, 688 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[415]"></a>msec_port_get_igr_def_act</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[416]"></a>msec_port_get_igr_redir_vec</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[417]"></a>msec_port_get_igr_rpy_var</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[418]"></a>msec_port_get_igr_sci_info</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[419]"></a>msec_port_etm_cfg</STRONG> (Thumb, 596 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[41a]"></a>msec_port_get_etm_cfg</STRONG> (Thumb, 576 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_get
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[41b]"></a>msec_port_fips_ctl</STRONG> (Thumb, 310 bytes, Stack size 80 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ikey_entry
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ihkey_entry
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ekey_entry
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ehkey_entry
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_chk
</UL>

<P><STRONG><a name="[41c]"></a>msec_set_fips_vec</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_bits_write
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_chk
</UL>

<P><STRONG><a name="[41d]"></a>msec_port_fips_chk</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_fips_obv
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_fips_vec
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
</UL>

<P><STRONG><a name="[41f]"></a>msec_force_flow_ctrl_en</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[420]"></a>msec_set_phy_speed_duplex</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[421]"></a>msec_set_macsec_speed_duplex</STRONG> (Thumb, 1038 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[422]"></a>msec_set_mac_frame_size_limit</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[423]"></a>msec_enable_non_disruptive_loopback</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[389]"></a>msec_SetEEELPIMode</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetEEELPIMode
</UL>

<P><STRONG><a name="[38b]"></a>msec_GetEEELPIMode</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetEEELPIMode
</UL>

<P><STRONG><a name="[393]"></a>msec_SetEEELPIInterrupt</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterrupt
</UL>

<P><STRONG><a name="[395]"></a>msec_GetEEELPIInterrupt</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterrupt
</UL>

<P><STRONG><a name="[397]"></a>msec_SetEEELPIInterruptMask</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterruptMask
</UL>

<P><STRONG><a name="[399]"></a>msec_GetEEELPIInterruptMask</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterruptMask
</UL>

<P><STRONG><a name="[39b]"></a>msec_SetEEELPIIgrBuffThresh</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrBuffThresh
</UL>

<P><STRONG><a name="[39d]"></a>msec_GetEEELPIIgrBuffThresh</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrBuffThresh
</UL>

<P><STRONG><a name="[39f]"></a>msec_SetEEELPIEEEBuffThresh</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIEEEBuffThresh
</UL>

<P><STRONG><a name="[3a1]"></a>msec_GetEEELPIEEEBuffThresh</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIEEEBuffThresh
</UL>

<P><STRONG><a name="[3a3]"></a>msec_SetEEELPIIgrDscThresh</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrDscThresh
</UL>

<P><STRONG><a name="[3a5]"></a>msec_GetEEELPIIgrDscThresh</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, msecapi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrDscThresh
</UL>

<P><STRONG><a name="[3cd]"></a>msecWriteReg</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madLong2Short
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_fips_vec
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_redir_hdr
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[3cf]"></a>msecReadReg</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_get_mib_stat_value
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat_value
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_get_redir_hdr
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>

<P><STRONG><a name="[425]"></a>msec_force_macsec_rst</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[426]"></a>msec_print_mac_ctrl</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[427]"></a>msec_print_match_en</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_lkup
</UL>

<P><STRONG><a name="[428]"></a>msec_print_match_fld</STRONG> (Thumb, 1092 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_lkup
</UL>

<P><STRONG><a name="[429]"></a>msec_print_act_fld</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_lkup
</UL>

<P><STRONG><a name="[42a]"></a>msec_print_lkup</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_act_fld
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_match_fld
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_match_en
</UL>

<P><STRONG><a name="[42b]"></a>msec_print_ect</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[42c]"></a>msec_print_key</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[42d]"></a>msec_print_hkey</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[42e]"></a>msec_print_redir_hdr</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[42f]"></a>msec_print_cmn_cfg</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[430]"></a>msec_print_egr_cfg</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[431]"></a>msec_print_igr_def</STRONG> (Thumb, 1066 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_cfg
</UL>

<P><STRONG><a name="[432]"></a>msec_print_redir</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_cfg
</UL>

<P><STRONG><a name="[433]"></a>msec_print_sci_info</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_cfg
</UL>

<P><STRONG><a name="[434]"></a>msec_print_rpy_info</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_cfg
</UL>

<P><STRONG><a name="[435]"></a>msec_print_igr_cfg</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_rpy_info
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_sci_info
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_redir
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_def
</UL>

<P><STRONG><a name="[436]"></a>msec_print_etm_cfg</STRONG> (Thumb, 1176 bytes, Stack size 8 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[437]"></a>msec_print_fips_cfg</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[438]"></a>msec_print_macsec_stat</STRONG> (Thumb, 8930 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_macsec_stat
</UL>

<P><STRONG><a name="[439]"></a>msec_print_mib_stat</STRONG> (Thumb, 1258 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_mib_stat
</UL>

<P><STRONG><a name="[3ee]"></a>aes_hkey</STRONG> (Thumb, 52 bytes, Stack size 272 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt_key
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
</UL>

<P><STRONG><a name="[3d2]"></a>msec_bits_write</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_fips_vec
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_etm_cfg
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_sci_info
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_rpy_var
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_igr_cfg
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_redir_hdr
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_act_fld
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_fld
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_entry
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_fld
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_entry
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_ctrl
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_speed
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_cmn_cfg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_def_act
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
</UL>

<P><STRONG><a name="[3e3]"></a>msec_bits_get</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_etm_cfg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_sci_info
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_rpy_var
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_def_act
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_cfg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_get_redir_hdr
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_act
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_match_fld
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_entry
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ikey_entry
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ihkey_entry
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_act
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_match_fld
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_entry
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ekey_entry
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ehkey_entry
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_speed
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_ctrl
</UL>

<P><STRONG><a name="[3fe]"></a>msec_port_set_nxtpn_ent</STRONG> (Thumb, 962 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
</UL>

<P><STRONG><a name="[41e]"></a>port_fips_obv</STRONG> (Thumb, 354 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_chk
</UL>

<P><STRONG><a name="[43b]"></a>clear_fips_vec</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[43c]"></a>msec_port_get_macsec_stat_value</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_acc_macsec_stat
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat
</UL>

<P><STRONG><a name="[43d]"></a>msec_port_get_macsec_stat</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat_value
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_macsec_stat
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_macsec_stat
</UL>

<P><STRONG><a name="[43e]"></a>port_acc_macsec_stat</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat_value
</UL>

<P><STRONG><a name="[43f]"></a>port_rd_n_dump_macsec_stat</STRONG> (Thumb, 50 bytes, Stack size 3088 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_macsec_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_n_dump_macsec_stat
</UL>

<P><STRONG><a name="[440]"></a>rd_n_dump_macsec_stat</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_macsec_stat
</UL>

<P><STRONG><a name="[3d3]"></a>msec_clr_macsec_stat</STRONG> (Thumb, 50 bytes, Stack size 3096 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
</UL>

<P><STRONG><a name="[441]"></a>port_get_mib_stat_value</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mib_stat
</UL>

<P><STRONG><a name="[442]"></a>msec_port_get_mib_stat</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_get_mib_stat_value
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_mib_stat
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_mib_stat
</UL>

<P><STRONG><a name="[443]"></a>port_rd_n_dump_mib_stat</STRONG> (Thumb, 44 bytes, Stack size 272 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mib_stat
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_mib_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_n_dump_mib_stat
</UL>

<P><STRONG><a name="[444]"></a>rd_n_dump_mib_stat</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_mib_stat
</UL>

<P><STRONG><a name="[3d4]"></a>msec_clr_mib_stat</STRONG> (Thumb, 46 bytes, Stack size 280 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mib_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
</UL>

<P><STRONG><a name="[445]"></a>msec_dis_macsec_clk</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[446]"></a>msec_en_macsec_clk</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[447]"></a>msec_en_PTP</STRONG> (Thumb, 608 bytes, Stack size 32 bytes, msecfunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[51e]"></a>__use_no_semihosting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi_2.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetSoftwareResetStatus
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPagedPhyRegField
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwPhyReset
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPagedPhyRegField
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPPUEn
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPPUEn
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverPagedAccessStop
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverPagedAccessStart
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverGetPhyID
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyInformation
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACDMA_Config
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_ETH_PHY
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ETH_PHY
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_ETH_PHY
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetIngressMonitor
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetIngressMonitor
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal3Reg
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal3Reg
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavSetPAV
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpavGetPAV
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortCtrl3
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortCtrl3
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowVid0
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowVid0
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDefQpri
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDefQpri
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCutThrough
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCutThrough
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDebugCounter
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQueueCtrl
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQueueCtrl
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobal3Reg
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobal3Reg
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobal2Reg
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobal2Reg
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetGlobalReg
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetGlobalReg
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSwitchReg
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSwitchReg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSet200Base
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGet200Base
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetJumboMode
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetJumboMode
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortEType
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortEType
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRefreshLocked
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRefreshLocked
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIntOnAgeOut
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIntOnAgeOut
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHoldAt1
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHoldAt1
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFrameMode
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFrameMode
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTxPFCtoQ
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCtoQ
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRxPFCtoQ
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCtoQ
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTxPFCEn
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTxPFCEn
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetRxPFCEn
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetRxPFCEn
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetQtoPause
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetQtoPause
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitIn
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitIn
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPauseLimitOut
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPauseLimitOut
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProviderTag
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProviderTag
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetPortSched
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetQueueCtrl
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetPortSched
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetQueueCtrl
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressFlood
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressFlood
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetARPtoCPU
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetARPtoCPU
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAFiltering
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAFiltering
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetFCOnRateLimitMode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetFCOnRateLimitMode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardBCastMode
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardBCastMode
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrunkPort
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrunkPort
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMessagePort
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMessagePort
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMonitorSource
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMonitorSource
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetEgressMonitorSource
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetEgressMonitorSource
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDefaultForward
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDefaultForward
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMapDA
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMapDA
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardUntagged
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardUntagged
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDiscardTagged
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDiscardTagged
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreWrongData
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreWrongData
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLockedPort
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLockedPort
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetCPUPort
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetCPUPort
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDAPriOverride
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDAPriOverride
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetSAPriOverride
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetSAPriOverride
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetVTUPriOverride
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetVTUPriOverride
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetAllowedBad
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetAllowedBad
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIgnoreFCS
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIgnoreFCS
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetLearnDisable
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInterswitchPort
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInterswitchPort
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDoubleTag
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDoubleTag
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetInitialPri
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetInitialPri
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetDropOnLock
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetDropOnLock
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForwardUnknown
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForwardUnknown
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetProtectedMode
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetProtectedMode
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetHeaderMode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetHeaderMode
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIGMPSnoop
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIGMPSnoop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetMcRateLimit
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetMcRateLimit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetIngressMode
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetIngressMode
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetTrailerMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetTrailerMode
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetUseCoreTag
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetUseCoreTag
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtGetForceFc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetForceFc
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataGet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportPointDataSet
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DumpResource
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3Initialize
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadTSMResource
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteTSMResource
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3SetCurTimeUpInt
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3DisableResource
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadResource
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteResource
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3Initialize
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadTSMResource
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteTSMResource
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DisableIRLResource
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadResource
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3InitIRLResource
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DataToResource
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteResource
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DumpResource
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2Initialize
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadTSMResource
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteTSMResource
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2SetCurTimeUpInt
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2DisableResource
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadResource
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteResource
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2Initialize
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadTSMResource
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteTSMResource
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DisableIRLResource
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadResource
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2InitIRLResource
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DataToResource
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteResource
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlDumpResource
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlInitialize
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlSetCurTimeUpInt
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlGetIngressRateResource
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadPortVec
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdatePortVec
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadParam
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grcGetPirlFcMode
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlDeactivate
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitialize
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlReadResource
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlGetPortVec
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetPortVec
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlWriteResource
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitIRLUnit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlSetFcMode
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegWritePPUEn
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegReadPPUEn
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverIsPhyAttached
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportSetFlowCtrl
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gportGetFlowCtrl
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMonitorMgmtCtrl
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMonitorMgmtCtrl
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataGet
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal1PointDataSet
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetQosWeightCtrl
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetQosWeightCtrl
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetImpCommCtrl
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetImpCommCtrl
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetEnergeManagementCtrl
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetEnergeManagementCtrl
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetScratchMiscCtrl
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetScratchMiscCtrl
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataGet
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGlobal2PointDataSet
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatTest
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatTest
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatCtrl_2
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatCtrl_2
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetVoltageRegulatCtrl
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetVoltageRegulatCtrl
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerMonitorThreshold
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerMonitorThreshold
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerMonitorCtrl
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerMonitorCtrl
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEEETimeRate
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEEETimeRate
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTxIdleTime
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTxIdleTime
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeTimeFE
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWakeTimeFE
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAsrtTime
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAsrtTime
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeTimeGE
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWakeTimeGE
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPowerCtrl
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPowerCtrl
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEERxStates
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearxEEETrStatusCounter
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEETrStatusCounter
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetxEEERxStatusCounter
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearxEEERxStatusCounter
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioxPortStallVect
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioxPortStallVect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEEPROM
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEEPROM
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetP5_Clock
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetP5_Clock
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetP6_Clock
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetP6_Clock
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSyncETai
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSyncETai
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetConfigData
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioData
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioData
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioSMI
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioSMI
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioDirection
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioDirection
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioPinControl
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioPinControl
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGpioConfigMod
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGpioConfigMod
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchBits
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchBits
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetScratchMiscCtrl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetScratchMiscCtrl
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetStEeprom
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysHaltEeprom
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysRestartEeprom
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysWriteEeprom
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReadEeprom
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIpMappingPrio
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIpMappingPrio
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUseIpMappingTable
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUseIpMappingTable
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromOperationPerform
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePortReg
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPortReg
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegBits
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevSetWatchDogCtrl
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gdevGetWatchDogCtrl
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal2RegField
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2Cpu
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMGMTPri
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpGetPortState
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetPortState
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetMode
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enhancedBPDUSet
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegBits
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAgeInt
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprtSetLearnDisable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetMacFPri
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetMacFPri
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetATUTestMode
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetATUTestMode
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetLearnAVB
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearnAVB
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearnEnable
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbLearnEnable
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelAtuEntry
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelMacEntry
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbRemovePortInDB
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbRemovePort
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMoveInDB
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMove
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFlushInDB
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFlush
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryNext
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCount
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetMacAvb
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetMacAvb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetLearn2All
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetLearn2All
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetAgingTimeout
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAgingTimeout
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAgingTimeRange
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetAtuSize
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCountInDBNum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCountInDBNum
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCount
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnCnt
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetPortAtuLearnLimit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbSetPortAtuLearnLimit
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysModSoftReset
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPhyRegField
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedReset
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPhyRegField
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetPhyCopperReg
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetPhyCopperReg
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGet1000TMasterMode
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSet1000TMasterMode
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetSpeedDuplex
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelayEnable
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelayEnable
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetLinkDownDelay
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetLinkDownDelay
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDTEDetectEnable
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetDownshiftEnable
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDownshiftEnable
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetMDIMode
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetMDIMode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoRestart
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperGetAutoNeg
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetAutoNeg
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimRegsInit
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdSimInit
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrRead
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupWrite
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupRead
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegWrite
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegRead
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegBits
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobal3RegField
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyReadGlobal2Reg
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiManualIfInit
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfInit
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverFindPhyID
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal3RegField
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteMiiReg
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadMiiReg
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCutThroughPoint
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCutThroughPoint
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCTTooEarlyIntEn
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCTTooEarlyIntEn
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCTTooEarly
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCTTooEarly
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCutThroughHold
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCutThroughHold
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGenMac
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGenMac
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearWakeupSource
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeupSource
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWolControlMc
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControlMc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWolControl
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControl
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWoLPass
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWoLPass
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPerPortWoLMac
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPerPortWoLMac
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWoLMac
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWoLMac
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPortWakeonFrameEnSt_11p
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPortWakeonFrameEn_11p
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPortWakeonFrameEn_11p
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysLportvec2Portvec
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysPortvec2Lportvec
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysLport2Port
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysPort2Lport
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCLK125En
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCLK125En
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPwoBC
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPwoBC
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSDETPolarity
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSDETPolarity
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGet5BitPort
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSet5BitPort
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetQVlansOnly
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetQVlansOnly
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetAlwaysUseVTU
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAlwaysUseVTU
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTagFlowControl
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTagFlowControl
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRemove1PTag
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRemove1PTag
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFloodBC
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFloodBC
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetLoopbackFilter
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetLoopbackFilter
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables2X
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables2X
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCtrMode
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCtrMode
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMUMode
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMUMode
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMEnable
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMEnable
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHeaderType
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHeaderType
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMDACheck
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMDACheck
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRMPort
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRMPort
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMirrorDest
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMirrorDest
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCPUPort
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRecursiveStrippingDisable
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRecursiveStrippingDisable
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetOldHader
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetOldHader
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUsePortSchedule
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUsePortSchedule
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPPri
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPPri
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceARPPri
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceARPPri
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSnoopPri
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSnoopPri
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceSnoopPri
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceSnoopPri
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetAgeInt
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRateLimitMode
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRateLimitMode
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkRouting
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkRouting
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHashTrunk
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHashTrunk
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetTrunkMaskTable
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetTrunkMaskTable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDevRoutingTable
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDevRoutingTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowCtrlDelay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowCtrlDelay
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFCPri
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFCPri
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetForceFlowControlPri
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetForceFlowControlPri
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetFlowControlMessage
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetFlowControlMessage
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPreventLoops
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPreventLoops
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetUseDoubleTagData
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetUseDoubleTagData
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMGMTPri
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2Cpu
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetARPDest
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetARPDest
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetEgressMonitorDest
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetEgressMonitorDest
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetIngressMonitorDest
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetIngressMonitorDest
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCoreTagType
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCoreTagType
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDeviceNumber
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDeviceNumber
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetCascadePort
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCascadePort
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvReqPri
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvReqPri
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetLimitBackoff
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetLimitBackoff
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRetransmitMode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRetransmitMode
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysWriteMiiReg
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReadMiiReg
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPerPortDuplexPauseMac
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPerPortDuplexPauseMac
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDuplexPauseMac
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDuplexPauseMac
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWatchDog
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWatchDog
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReLoad
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetMaxFrameSize
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMaxFrameSize
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetHashMulticast
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetHashMulticast
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetSchedulingMode
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetSchedulingMode
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDiscardExcessive
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDiscardExcessive
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSwReset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetCPUPort
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverConfig
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysEnable
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qd_madInit
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdUnloadDriver
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysInitCPUPort
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madStart
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSMIWrite
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSMIRead
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSerdesReset
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45WritePhyReg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStop
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pageAccessStart
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madPagedAccessStop
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madPagedAccessStart
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_18
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_20_6
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_16_2
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwMode_27_0
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1680
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1240
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1149
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1121
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E3082
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E3016
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E114X
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1116
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1112
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1111
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E104X
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runOnce88E1181
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45ReadPhyReg
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45SetPhyRegField
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHw45GetPhyRegField
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIMode
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterruptMask
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIInterrupt
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrDscThresh
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIIgrBuffThresh
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_SetEEELPIEEEBuffThresh
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIMode
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterruptMask
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIInterrupt
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrDscThresh
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIIgrBuffThresh
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_GetEEELPIEEEBuffThresh
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPhyReg
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madGetHwMode
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMediaMode
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMediaMode
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPreferredMedia
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPreferredMedia
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetAutoSelect
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetAutoSelect
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrDscThresh
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrDscThresh
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIEEEBuffThresh
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIEEEBuffThresh
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIIgrBuffThresh
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIIgrBuffThresh
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterruptMask
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterruptMask
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetEEELPIInterrupt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSetEEELPIInterrupt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetUniDirTrans
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetUniDirTrans
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetLEDCtrl
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetLEDCtrl
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetSnoopCtrl
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetSnoopCtrl
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetEEELPIMode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetEEELPIMode
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownMode
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetDetectPowerDownModeSt
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetMacPowerDown
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetMacPowerDown
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetQSGMIIPwDown
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetQSGMIIPwDown
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPhyEnable
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPagedPhyReg
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysGetPagedPhyReg
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetMacSpeedStatus
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetSpeedStatus
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus_
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetPhyEnable
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdSysSetDetectPowerDownMode
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDriverConfig
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdUnloadDriver
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fnRegister
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_PTP
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetDuplexStatus
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetStatus
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntGetEnable
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdTempIntSetEnable
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetPortSummary
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus_f
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable_f
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable_f
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_en_macsec_clk
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_dis_macsec_clk
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_n_dump_mib_stat
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_mib_stat
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mib_stat
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_get_mib_stat_value
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_n_dump_macsec_stat
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_rd_n_dump_macsec_stat
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_acc_macsec_stat
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_macsec_stat_value
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_fips_vec
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_mib_stat
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_macsec_stat
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_fips_cfg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_etm_cfg
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_rpy_info
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_sci_info
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_redir
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_igr_def
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_egr_cfg
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_cmn_cfg
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_redir_hdr
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_hkey
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_key
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_ect
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_act_fld
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_match_fld
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_match_en
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_print_mac_ctrl
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_force_macsec_rst
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_fips_obv
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_nxtpn_ent
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_mib_stat
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_clr_macsec_stat
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWriteReg
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadReg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_enable_non_disruptive_loopback
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_mac_frame_size_limit
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_macsec_speed_duplex
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_phy_speed_duplex
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_force_flow_ctrl_en
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_chk
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_fips_vec
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_fips_ctl
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_etm_cfg
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_etm_cfg
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_sci_info
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_rpy_var
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_redir_vec
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_def_act
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_cfg
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_sci_info
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_rpy_var
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_redir_vec
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_igr_cfg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_cfg
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_cmn_cfg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_get_redir_hdr
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_redir_sa
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_set_redir_hdr
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_redir_sa
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_act
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_match_en
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_match_fld
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_igr_entry
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ilu_entry
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ikey_entry
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ihkey_entry
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_nxtpn_entry
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_en
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_act_fld
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_match_fld
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_entry
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ikey_entry
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ihkey_entry
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ilu_entry
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_act
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_match_en
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_match_fld
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_egr_entry
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_elu_entry
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ect_entry
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ekey_entry
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_ehkey_entry
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_act_fld
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_en
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_match_fld
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_egr_entry
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ect_entry
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ekey_entry
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_ehkey_entry
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_elu_entry
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_var
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_speed
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_autoneg
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_flow_ctrl
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_en_dis
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_get_mac_ctrl
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_mac_cfg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_mac_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_rst
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_ctrl
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_speed
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_mac_link
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_maxwell_ae_start_init
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_macsec_init
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_elu_ent
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_dis_ilu_ent
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_cmn_cfg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_egr_cfg
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_port_set_igr_def_act
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msec_stat_init
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_testchip_revision
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecReadPortReg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msecWritePortReg
</UL>

<P><STRONG><a name="[44a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[44b]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[449]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[77]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[44d]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[7a]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[7c]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[75]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[44e]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[c2]"></a>__0scanf</STRONG> (Thumb, 26 bytes, Stack size 56 bytes, __0scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45b]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[c7]"></a>putc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, putc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[34e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy1000M
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dteWorkAround_Phy100M
</UL>

<P><STRONG><a name="[51f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[520]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[521]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[314]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdStart
</UL>

<P><STRONG><a name="[522]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[523]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[524]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[525]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[526]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[527]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[528]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[529]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[44c]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[452]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7e]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[80]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[448]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[451]"></a>__vfscanf_char_file</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scanf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
</UL>

<P><STRONG><a name="[453]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[455]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>

<P><STRONG><a name="[1]"></a>___backspace$unlocked</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, backspace.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__backspace</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, backspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __backspace
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ungetc_internal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[454]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[87]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[6e]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[456]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[457]"></a>_ungetc_internal</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ungetc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__backspace
</UL>

<P><STRONG><a name="[52a]"></a>ungetc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ungetc.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[52b]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[458]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[52c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[45a]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[84]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[45d]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[44f]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[6f]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[52d]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[52e]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[9f]"></a>ETH_Delay</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f4x7_eth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_PowerDownCmd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MagicPacketDetectionCmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WakeUpFrameDetectionCmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GlobalUnicastWakeUpCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_SetWakeUpFrameFilterRegister
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ResetWakeUpFrameFilterRegisterPointer
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_EnhancedDescriptorCmd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressMaskBytesFilterConfig
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressFilterConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressPerfectFilterCmd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BackPressureActivationCmd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_InitiatePauseControlFrame
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACTransmissionCmd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACReceptionCmd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_FlushTransmitFIFO
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[c5]"></a>SetSysClock</STRONG> (Thumb, 220 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[e3]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4x7_eth_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
</UL>

<P><STRONG><a name="[db]"></a>ETH_MACDMA_Config</STRONG> (Thumb, 154 bytes, Stack size 192 bytes, stm32f4x7_eth_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ETH_MACDMA_Config &rArr; ETH_Init &rArr; ETH_WritePHYRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMAITConfig
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetSoftwareResetStatus
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_SoftwareReset
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_StructInit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
</UL>

<P><STRONG><a name="[df]"></a>ETH_NVIC_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4x7_eth_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ETH_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
</UL>

<P><STRONG><a name="[e0]"></a>ETH_GPIO_Config</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32f4x7_eth_bsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ETH_GPIO_Config &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_ETH_MediaInterfaceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_BSP_Config
</UL>

<P><STRONG><a name="[eb]"></a>atuOperationPerform</STRONG> (Thumb, 2048 bytes, Stack size 48 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobalReg
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetGlobalRegField
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobalReg
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobalRegField
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatuGetViolation
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelAtuEntry
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbDelMacEntry
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMoveInDB
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbMove
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFlushInDB
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFlush
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryNext
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCount
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCountInDBNum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCountInDBNum
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCount
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuGetStats
</UL>

<P><STRONG><a name="[f2]"></a>atuGetStats</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atuOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCount
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCountInDBNum
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCountInDBNum
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuAllCount
</UL>

<P><STRONG><a name="[f9]"></a>atuStateDevToApp</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbFindAtuMacEntry
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryNext
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuEntryFirst
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCount
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbGetAtuDynamicCountInDBNum
</UL>

<P><STRONG><a name="[111]"></a>atuStateAppToDev</STRONG> (Thumb, 854 bytes, Stack size 20 bytes, gtbrgfdb.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gfdbAddMacEntry
</UL>

<P><STRONG><a name="[121]"></a>enhancedBPDUSet</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, gtbrgstp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2CpuEnables
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetRsvd2Cpu
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetMGMTPri
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetRsvd2CpuEnables
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gstpSetMode
</UL>

<P><STRONG><a name="[12d]"></a>eepromOperationPerform</STRONG> (Thumb, 1494 bytes, Stack size 32 bytes, gtmisc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysHaltEeprom
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysRestartEeprom
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysWriteEeprom
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysReadEeprom
</UL>

<P><STRONG><a name="[178]"></a>pirlSetFcMode</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[179]"></a>pirlOperationPerform</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, gtpirl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = pirlOperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlDumpResource
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlSetCurTimeUpInt
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitialize
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlReadResource
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlWriteResource
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlInitIRLUnit
</UL>

<P><STRONG><a name="[17a]"></a>pirlInitIRLUnit</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[17b]"></a>pirlWriteResource</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[17e]"></a>pirlDataToResource</STRONG> (Thumb, 540 bytes, Stack size 16 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[17c]"></a>pirlSetPortVec</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdatePortVec
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlDeactivate
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlActivate
</UL>

<P><STRONG><a name="[180]"></a>pirlGetPortVec</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadPortVec
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdatePortVec
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadParam
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlUpdateParam
</UL>

<P><STRONG><a name="[185]"></a>pirlResourceToData</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadParam
</UL>

<P><STRONG><a name="[183]"></a>pirlReadResource</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, gtpirl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlReadParam
</UL>

<P><STRONG><a name="[18a]"></a>pirlInitialize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gtpirl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = pirlInitialize &rArr; gpirlSetCurTimeUpInt &rArr; pirlOperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlSetCurTimeUpInt
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirlOperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirlInitialize
</UL>

<P><STRONG><a name="[18d]"></a>pirl2OperationPerform</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, gtpirl2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = pirl2OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DumpResource
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2SetCurTimeUpInt
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2Initialize
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadTSMResource
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteTSMResource
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2DisableIRLResource
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2ReadResource
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2InitIRLResource
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2WriteResource
</UL>

<P><STRONG><a name="[18e]"></a>pirl2WriteResource</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteResource
</UL>

<P><STRONG><a name="[18f]"></a>pirl2DataToResource</STRONG> (Thumb, 770 bytes, Stack size 24 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteResource
</UL>

<P><STRONG><a name="[190]"></a>pirl2InitIRLResource</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteTSMResource
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteResource
</UL>

<P><STRONG><a name="[194]"></a>pirl2ResourceToData</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadResource
</UL>

<P><STRONG><a name="[192]"></a>pirl2ReadResource</STRONG> (Thumb, 272 bytes, Stack size 64 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadResource
</UL>

<P><STRONG><a name="[195]"></a>pirl2DisableIRLResource</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2DisableResource
</UL>

<P><STRONG><a name="[198]"></a>pirl2WriteTSMResource</STRONG> (Thumb, 168 bytes, Stack size 64 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2WriteTSMResource
</UL>

<P><STRONG><a name="[19a]"></a>pirl2ReadTSMResource</STRONG> (Thumb, 178 bytes, Stack size 64 bytes, gtpirl2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2ReadTSMResource
</UL>

<P><STRONG><a name="[19c]"></a>pirl2Initialize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gtpirl2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = pirl2Initialize &rArr; gpirl2SetCurTimeUpInt &rArr; pirl2OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2SetCurTimeUpInt
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl2OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl2Initialize
</UL>

<P><STRONG><a name="[19f]"></a>pirl3OperationPerform</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, gtpirl3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = pirl3OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemTake
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtSemGive
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DumpResource
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3SetCurTimeUpInt
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3Initialize
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadTSMResource
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteTSMResource
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3DisableIRLResource
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3ReadResource
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3InitIRLResource
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3WriteResource
</UL>

<P><STRONG><a name="[1a0]"></a>pirl3WriteResource</STRONG> (Thumb, 254 bytes, Stack size 88 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteResource
</UL>

<P><STRONG><a name="[1a1]"></a>pirl3DataToResource</STRONG> (Thumb, 540 bytes, Stack size 24 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtMemSet
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Char
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteResource
</UL>

<P><STRONG><a name="[1a3]"></a>pirl3InitIRLResource</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteTSMResource
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteResource
</UL>

<P><STRONG><a name="[1a7]"></a>pirl3ResourceToData</STRONG> (Thumb, 526 bytes, Stack size 16 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadResource
</UL>

<P><STRONG><a name="[1a5]"></a>pirl3ReadResource</STRONG> (Thumb, 308 bytes, Stack size 72 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadResource
</UL>

<P><STRONG><a name="[1a8]"></a>pirl3DisableIRLResource</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3DisableResource
</UL>

<P><STRONG><a name="[1ab]"></a>pirl3WriteTSMResource</STRONG> (Thumb, 196 bytes, Stack size 72 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3WriteTSMResource
</UL>

<P><STRONG><a name="[1ad]"></a>pirl3ReadTSMResource</STRONG> (Thumb, 192 bytes, Stack size 72 bytes, gtpirl3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3ReadTSMResource
</UL>

<P><STRONG><a name="[1af]"></a>pirl3Initialize</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gtpirl3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = pirl3Initialize &rArr; gpirl3SetCurTimeUpInt &rArr; pirl3OperationPerform &rArr; hwGetGlobal2RegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3SetCurTimeUpInt
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pirl3OperationPerform
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpirl3Initialize
</UL>

<P><STRONG><a name="[63]"></a>madSMIRead</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = madSMIRead &rArr; hwReadPhyReg &rArr; coreReadPhyReg &rArr; phyRegReadPPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gtsysconfig.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>madSMIWrite</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = madSMIWrite &rArr; hwWritePhyReg &rArr; coreWritePhyReg &rArr; phyRegWritePPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gtsysconfig.o(.text)
</UL>
<P><STRONG><a name="[23c]"></a>madGetDeviceName</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, gtsysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madStart
</UL>

<P><STRONG><a name="[23a]"></a>madStart</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = madStart &rArr; mdLoadDriver &rArr; madFindPhyInformation &rArr; madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madGetDeviceName
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qd_madInit
</UL>

<P><STRONG><a name="[240]"></a>gsysInitCPUPort</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, gtsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = gsysInitCPUPort &rArr; hwSetPortRegField &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPortRegField
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lport2port
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[242]"></a>gtRegister</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gtsysconfig.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLoadDriver
</UL>

<P><STRONG><a name="[257]"></a>writeSwitchMacReg</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Short
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetGenMac
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWoLPass
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWoLMac
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwMacReg
</UL>

<P><STRONG><a name="[259]"></a>writeSwMacReg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeSwitchMacReg
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetDuplexPauseMac
</UL>

<P><STRONG><a name="[25b]"></a>readSwitchMacReg</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdLong2Short
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetGenMac
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWoLPass
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWoLMac
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwMacReg
</UL>

<P><STRONG><a name="[25c]"></a>readSwMacReg</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSwitchMacReg
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetDuplexPauseMac
</UL>

<P><STRONG><a name="[25e]"></a>writeDiffMACWoL</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPerPortWoLMac
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMAC
</UL>

<P><STRONG><a name="[25f]"></a>writeDiffMAC</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeDiffMACWoL
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPerPortDuplexPauseMac
</UL>

<P><STRONG><a name="[261]"></a>readDiffMACWoL</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPerPortWoLMac
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMAC
</UL>

<P><STRONG><a name="[262]"></a>readDiffMAC</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readDiffMACWoL
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPerPortDuplexPauseMac
</UL>

<P><STRONG><a name="[2cc]"></a>writeSwMacWolWofReg</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysClearWakeupSource
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControlMc
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControl
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetPortWakeonFrameEn_11p
</UL>

<P><STRONG><a name="[2ce]"></a>readSwMacWolWofReg</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, gtsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetGlobal2RegField
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWriteGlobal2Reg
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadGlobal2Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWakeupSource
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWolControlMc
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControlMc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetWolControl
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysSetWolControl
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPortWakeonFrameEnSt_11p
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsysGetPortWakeonFrameEn_11p
</UL>

<P><STRONG><a name="[2ea]"></a>driverFindPhyID</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gtdrvconfig.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverGetPhyID
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driverIsPhyAttached
</UL>

<P><STRONG><a name="[2f2]"></a>hwWritePPU</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = hwWritePPU &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtDelay
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
</UL>

<P><STRONG><a name="[2f7]"></a>phyReadGlobal2Reg</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegWritePPUEn
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegReadPPUEn
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupWrite
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupRead
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegWrite
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegRead
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
</UL>

<P><STRONG><a name="[2f8]"></a>phyWriteGlobal2Reg</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = phyWriteGlobal2Reg &rArr; miiSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegWritePPUEn
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyXRegReadPPUEn
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupWrite
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smiSetupRead
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegWrite
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exPhyRegRead
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
</UL>

<P><STRONG><a name="[2fa]"></a>hwReadPPU</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = hwReadPPU &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePagedPhyReg
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPagedPhyReg
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreWritePhyReg
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;coreReadPhyReg
</UL>

<P><STRONG><a name="[2fb]"></a>coreReadPhyReg</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = coreReadPhyReg &rArr; phyRegReadPPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwPhyReset
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPhyReg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPhyRegField
</UL>

<P><STRONG><a name="[2fd]"></a>coreWritePhyReg</STRONG> (Thumb, 1472 bytes, Stack size 48 bytes, gthwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = coreWritePhyReg &rArr; phyRegWritePPUEn &rArr; phyReadGlobal2Reg &rArr; miiSmiIfReadRegister &rArr; qdMultiAddrRead &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwPhyReset
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePhyReg
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPhyRegField
</UL>

<P><STRONG><a name="[2fe]"></a>coreReadPagedPhyReg</STRONG> (Thumb, 1382 bytes, Stack size 72 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPagedPhyRegField
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPagedPhyReg
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwGetPagedPhyRegField
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSerdesReset
</UL>

<P><STRONG><a name="[300]"></a>coreWritePagedPhyReg</STRONG> (Thumb, 490 bytes, Stack size 72 bytes, gthwcntl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegWritePPUEn
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;phyRegReadPPUEn
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portToSmiMapping
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwReadPPU
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePPU
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwWritePagedPhyReg
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSetPagedPhyRegField
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwSerdesReset
</UL>

<P><STRONG><a name="[311]"></a>fgtReadMii</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fgtReadMii
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrWrite
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrRead
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfReadRegister
</UL>

<P><STRONG><a name="[312]"></a>fgtWriteMii</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gtmiismiif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fgtWriteMii
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrWrite
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qdMultiAddrRead
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;miiSmiIfWriteRegister
</UL>

<P><STRONG><a name="[34d]"></a>dteWorkAround_Phy100M</STRONG> (Thumb, 370 bytes, Stack size 168 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
</UL>

<P><STRONG><a name="[34f]"></a>dteWorkAround_Phy1000M</STRONG> (Thumb, 396 bytes, Stack size 160 bytes, madcpctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdCopperSetDTEDetectEnable
</UL>

<P><STRONG><a name="[35d]"></a>mdIntSetEnable_f</STRONG> (Thumb, 334 bytes, Stack size 40 bytes, madint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = mdIntSetEnable_f &rArr; madHwWritePagedPhyReg &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntSetEnable
</UL>

<P><STRONG><a name="[35f]"></a>mdIntGetEnable_f</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetEnable
</UL>

<P><STRONG><a name="[361]"></a>mdIntGetStatus_f</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, madint.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdIntGetStatus
</UL>

<P><STRONG><a name="[367]"></a>fnRegister</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, madsysconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = fnRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdLoadDriver
</UL>

<P><STRONG><a name="[374]"></a>mdGetLinkStatus_</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, madsysctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mad_lport2port
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetMacSpeedStatus
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdGetLinkStatus
</UL>

<P><STRONG><a name="[3ac]"></a>runOnce88E1181</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = runOnce88E1181 &rArr; madHwWritePagedPhyReg &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3ad]"></a>runOnce88E104X</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E104X &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3ae]"></a>runOnce88E1111</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E1111 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3af]"></a>runOnce88E1112</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E1112 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b0]"></a>runOnce88E1116</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E1116 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b1]"></a>runOnce88E114X</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E114X &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b2]"></a>runOnce88E3016</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E3016 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b3]"></a>runOnce88E3082</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E3082 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b4]"></a>runOnce88E1121</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E1121 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b5]"></a>runOnce88E1149</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = runOnce88E1149 &rArr; madHwWritePagedPhyReg &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b6]"></a>runOnce88E1240</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = runOnce88E1240 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3b7]"></a>runOnce88E1680</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, maddevconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = runOnce88E1680 &rArr; madHwSetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madDevPreInit
</UL>

<P><STRONG><a name="[3ba]"></a>madHwMode_27_0</STRONG> (Thumb, 796 bytes, Stack size 40 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = madHwMode_27_0 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madFindPhyInformation
</UL>

<P><STRONG><a name="[3bb]"></a>madHwMode_16_2</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = madHwMode_16_2 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madFindPhyInformation
</UL>

<P><STRONG><a name="[3bc]"></a>madHwMode_20_6</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = madHwMode_20_6 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madFindPhyInformation
</UL>

<P><STRONG><a name="[3bd]"></a>madHwMode_20_18</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, maddrvconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = madHwMode_20_18 &rArr; madHwGetPagedPhyRegField &rArr; pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madFindPhyInformation
</UL>

<P><STRONG><a name="[3c0]"></a>pageAccessStart</STRONG> (Thumb, 854 bytes, Stack size 40 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = pageAccessStart &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
</UL>

<P><STRONG><a name="[3c1]"></a>pageAccessStop</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, madhwcntl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = pageAccessStop &rArr; madSmiIfWriteRegister &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfWriteRegister
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madSmiIfReadRegister
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwWritePagedPhyReg
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwSetPagedPhyRegField
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwReadPagedPhyReg
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwPagedSetCtrlPara
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;madHwGetPagedPhyRegField
</UL>

<P><STRONG><a name="[6c]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
